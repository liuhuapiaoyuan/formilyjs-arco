{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form-tab/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo, useRef } from 'react'\nimport { Tabs, Badge } from '@arco-design/web-react'\nimport { model } from '@formily/reactive'\nimport {\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { Schema, SchemaKey } from '@formily/json-schema'\nimport cls from 'classnames'\nimport { usePrefixCls } from '../__builtins__'\nimport { TabPaneProps, TabsProps } from '@arco-design/web-react/es/tabs'\nconst TabPaneArco = Tabs.TabPane\nexport interface IFormTab {\n  activeKey?: string\n  setActiveKey(key: string): void\n}\n\nexport interface IFormTabProps extends TabsProps {\n  formTab?: IFormTab\n}\n\nexport interface IFormTabPaneProps extends TabPaneProps {\n  key: string | number\n}\n\ntype ComposedFormTab = React.FC<IFormTabProps> & {\n  TabPane?: React.FC<IFormTabPaneProps>\n  createFormTab?: (defaultActiveKey?: string) => IFormTab\n}\n\nconst useTabs = () => {\n  const tabsField = useField()\n  const schema = useFieldSchema()\n  const tabs: { name: SchemaKey; props: any; schema: Schema }[] = []\n  schema.mapProperties((schema, name) => {\n    const field = tabsField.query(tabsField.address.concat(name)).take()\n    if (field?.display === 'none' || field?.display === 'hidden') return\n    if (schema['x-component']?.indexOf('TabPane') > -1) {\n      tabs.push({\n        name,\n        props: {\n          itemKey: schema?.['x-component-props']?.itemKey || name,\n          ...schema?.['x-component-props'],\n        },\n        schema,\n      })\n    }\n  })\n  return tabs\n}\n\nconst createFormTab = (defaultActiveKey?: string, activeKey?: string) => {\n  const formTab: any = model({\n    defaultActiveKey,\n    activeKey,\n    setActiveKey(key: string) {\n      formTab.activeKey = key\n    },\n  })\n  return formTab\n}\n\nexport const FormTab: ComposedFormTab = observer(({ formTab, ...props }) => {\n  const field = useField()\n  const tabs = useTabs()\n  const tabsRef = useRef(tabs)\n  const propsRef = useRef(props)\n  const _formTab = useMemo(() => {\n    return (\n      formTab ??\n      createFormTab(\n        propsRef.current.defaultActiveTab ??\n          tabsRef.current?.[0]?.props?.itemKey,\n        propsRef.current.activeTab\n      )\n    )\n  }, [formTab])\n  const prefixCls = usePrefixCls('formily-tab')\n\n  const badgedTab = (key: SchemaKey, props: any) => {\n    const errors = field.form.queryFeedbacks({\n      type: 'error',\n      address: `${field.address.concat(key)}.*`,\n    })\n    if (errors.length) {\n      return (\n        <Badge className=\"errors-badge\" count={errors.length}>\n          {props.tab ?? props.title}\n        </Badge>\n      )\n    }\n    return props.tab ?? props.title\n  }\n\n  return (\n    <Tabs\n      {...props}\n      type=\"card-gutter\"\n      className={cls(prefixCls, props.className)}\n      defaultActiveTab={_formTab?.defaultActiveKey}\n      activeTab={_formTab?.activeKey ?? _formTab?.defaultActiveKey}\n      onChange={(key) => {\n        props.onChange?.(key)\n        _formTab?.setActiveKey?.(key)\n      }}\n    >\n      {tabs.map(({ props, schema, name }, key) => {\n        const { itemKey, ...reset } = props\n        return (\n          <TabPaneArco\n            key={`${itemKey ?? key}`}\n            {...reset}\n            title={badgedTab(name, props)}\n          >\n            <RecursionField schema={schema} name={name} />\n          </TabPaneArco>\n        )\n      })}\n    </Tabs>\n  )\n})\n\nconst TabPane: React.FC<IFormTabPaneProps> = ({ children }) => {\n  return <Fragment>{children}</Fragment>\n}\n\nFormTab.TabPane = TabPane\nFormTab.createFormTab = createFormTab\n\nexport default FormTab\n"]}