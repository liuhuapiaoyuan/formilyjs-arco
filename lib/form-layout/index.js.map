{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form-layout/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwD;AACxD,+CAAoD;AACpD,0DAA4B;AAC5B,wBAAqB;AA0BR,QAAA,iBAAiB,GAAG,IAAA,qBAAa,EAAmB,EAAE,CAAC,CAAA;AAEvD,QAAA,wBAAwB,GAAG,IAAA,qBAAa,EAAmB,EAAE,CAAC,CAAA;AAEpE,IAAM,aAAa,GAAG,cAAM,OAAA,IAAA,kBAAU,EAAC,yBAAiB,CAAC,EAA7B,CAA6B,CAAA;AAAnD,QAAA,aAAa,iBAAsC;AAEzD,IAAM,oBAAoB,GAAG,cAAM,OAAA,IAAA,kBAAU,EAAC,gCAAwB,CAAC,EAApC,CAAoC,CAAA;AAAjE,QAAA,oBAAoB,wBAA6C;AAEvE,IAAM,UAAU,GAGnB,UAAC,EAA4D;;IAA1D,IAAA,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,SAAS,eAAA,EAAE,KAAK,WAAA,EAAK,KAAK,cAA1D,0DAA4D,CAAF;IAC7D,IAAM,aAAa,GAAG,IAAA,oBAAY,EAAC,MAAM,CAAC,CAAA;IAC1C,IAAM,gBAAgB,GAAG,IAAA,oBAAY,EAAC,EAAE,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAA;IACpE,IAAM,eAAe,GAAG,IAAA,oBAAY,EAAC,QAAQ,EAAE,EAAE,SAAS,WAAA,EAAE,CAAC,CAAA;IAC7D,IAAM,eAAe,GAAG,IAAA,oBAAG,EACzB,eAAe;QAEb,GAAC,UAAG,aAAa,cAAI,KAAK,CAAC,MAAM,CAAE,IAAG,KAAK,CAAC,MAAM;QAClD,GAAC,UAAG,gBAAgB,CAAE,IAAG,KAAK,CAAC,SAAS,KAAK,KAAK;QAClD,GAAC,UAAG,aAAa,cAAI,KAAK,CAAC,IAAI,CAAE,IAAG,KAAK,CAAC,IAAI;aAEhD,SAAS,CACV,CAAA;IACD,IAAM,cAAc,GAAG;QACrB,IAAI,OAAO,EAAE;YACX,OAAO,CACL,8BAAC,gCAAwB,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,IAC5C,QAAQ,CACyB,CACrC,CAAA;SACF;aAAM;YACL,OAAO,CACL,8BAAC,yBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,IACrC,QAAQ,CACkB,CAC9B,CAAA;SACF;IACH,CAAC,CAAA;IACD,OAAO,CACL,uCAAK,SAAS,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,IAC1C,cAAc,EAAE,CACb,CACP,CAAA;AACH,CAAC,CAAA;AApCY,QAAA,UAAU,cAoCtB;AAED,kBAAU,CAAC,YAAY,GAAG;IACxB,OAAO,EAAE,IAAI;CACd,CAAA;AAED,kBAAU,CAAC,aAAa,GAAG,qBAAa,CAAA;AACxC,kBAAU,CAAC,oBAAoB,GAAG,4BAAoB,CAAA;AAEtD,kBAAe,kBAAU,CAAA","sourcesContent":["import React, { createContext, useContext } from 'react'\r\nimport { usePrefixCls } from '../__builtins__/hooks'\r\nimport cls from 'classnames'\r\nimport './index.scss'\r\n\r\nexport interface IFormLayoutProps {\r\n  prefixCls?: string\r\n  className?: string\r\n  style?: React.CSSProperties\r\n  colon?: boolean\r\n  labelAlign?: 'right' | 'left'\r\n  wrapperAlign?: 'right' | 'left'\r\n  labelWrap?: boolean\r\n  labelWidth?: number\r\n  wrapperWidth?: number\r\n  wrapperWrap?: boolean\r\n  labelCol?: number\r\n  wrapperCol?: number\r\n  fullness?: boolean\r\n  size?: 'small' | 'default' | 'large'\r\n  layout?: 'vertical' | 'horizontal' | 'inline'\r\n  direction?: 'rtl' | 'ltr'\r\n  inset?: boolean\r\n  shallow?: boolean\r\n  tooltipLayout?: 'icon' | 'text'\r\n  feedbackLayout?: 'loose' | 'terse' | 'popover'\r\n  bordered?: boolean\r\n}\r\n\r\nexport const FormLayoutContext = createContext<IFormLayoutProps>({})\r\n\r\nexport const FormLayoutShallowContext = createContext<IFormLayoutProps>({})\r\n\r\nexport const useFormLayout = () => useContext(FormLayoutContext)\r\n\r\nexport const useFormShallowLayout = () => useContext(FormLayoutShallowContext)\r\n\r\nexport const FormLayout: React.FC<IFormLayoutProps> & {\r\n  useFormLayout: () => IFormLayoutProps\r\n  useFormShallowLayout: () => IFormLayoutProps\r\n} = ({ shallow, children, prefixCls, className, style, ...props }) => {\r\n  const formPrefixCls = usePrefixCls('form')\r\n  const semiRtlPrefixCls = usePrefixCls('', { prefixCls: 'semi-rtl' })\r\n  const layoutPrefixCls = usePrefixCls('layout', { prefixCls })\r\n  const layoutClassName = cls(\r\n    layoutPrefixCls,\r\n    {\r\n      [`${formPrefixCls}-${props.layout}`]: props.layout,\r\n      [`${semiRtlPrefixCls}`]: props.direction === 'rtl',\r\n      [`${formPrefixCls}-${props.size}`]: props.size,\r\n    },\r\n    className\r\n  )\r\n  const renderChildren = () => {\r\n    if (shallow) {\r\n      return (\r\n        <FormLayoutShallowContext.Provider value={props}>\r\n          {children}\r\n        </FormLayoutShallowContext.Provider>\r\n      )\r\n    } else {\r\n      return (\r\n        <FormLayoutContext.Provider value={props}>\r\n          {children}\r\n        </FormLayoutContext.Provider>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div className={layoutClassName} style={style}>\r\n      {renderChildren()}\r\n    </div>\r\n  )\r\n}\r\n\r\nFormLayout.defaultProps = {\r\n  shallow: true,\r\n}\r\n\r\nFormLayout.useFormLayout = useFormLayout\r\nFormLayout.useFormShallowLayout = useFormShallowLayout\r\n\r\nexport default FormLayout\r\n"]}