{"version":3,"file":"index_1.js","sourceRoot":"lib/","sources":["form-dialog/demo/index_1.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwD;AACxD,sCAAuE;AACvE,wCAAkD;AAClD,oDAA+C;AAE/C,IAAM,WAAW,GAAG,IAAA,yBAAiB,EAAC;IACpC,UAAU,EAAE;QACV,QAAQ,iBAAA;QACR,KAAK,cAAA;KACN;CACF,CAAC,CAAA;AAEF,IAAM,OAAO,GAAG,IAAA,qBAAa,EAAC,IAAI,CAAC,CAAA;AAEnC,IAAM,QAAQ,GAAG,6BAA6B,CAAA;AAE9C,mBAAe,cAAM,OAAA,CACnB,8BAAC,OAAO,CAAC,QAAQ,IAAC,KAAK,EAAC,oJAA4B;IAClD,8BAAC,iBAAU,CAAC,MAAM,IAAC,EAAE,EAAE,QAAQ;QAC7B,8BAAC,kBAAM,IACL,OAAO,EAAE;gBACP,IAAA,iBAAU,EAAC,MAAM,EAAE,QAAQ,EAAE,UAAC,IAAI;oBAChC,OAAO,CAAC,GAAG,CAAC,IAAA,kBAAU,EAAC,OAAO,CAAC,CAAC,CAAA;oBAChC,OAAO,CACL,8BAAC,iBAAU,IAAC,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE;wBACrC,8BAAC,WAAW;4BACV,8BAAC,WAAW,CAAC,MAAM,IACjB,IAAI,EAAC,KAAK,EACV,QAAQ,QACR,KAAK,EAAC,qBAAM,iBACA,UAAU,iBACV,OAAO,GACnB;4BACF,8BAAC,WAAW,CAAC,MAAM,IACjB,IAAI,EAAC,KAAK,EACV,QAAQ,QACR,KAAK,EAAC,qBAAM,iBACA,UAAU,iBACV,OAAO,GACnB;4BACF,8BAAC,WAAW,CAAC,MAAM,IACjB,IAAI,EAAC,KAAK,EACV,QAAQ,QACR,KAAK,EAAC,qBAAM,iBACA,UAAU,iBACV,OAAO,GACnB;4BACF,8BAAC,WAAW,CAAC,MAAM,IACjB,IAAI,EAAC,KAAK,EACV,QAAQ,QACR,KAAK,EAAC,qBAAM,iBACA,UAAU,iBACV,OAAO,GACnB,CACU;wBACd,8BAAC,iBAAU,CAAC,MAAM;4BAChB,wCAAM,KAAK,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE;;gCACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAChB,CACW,CACT,CACd,CAAA;gBACH,CAAC,CAAC;qBACC,OAAO,CAAC,UAAC,QAAQ,EAAE,IAAI;oBACtB,UAAU,CAAC;wBACT,IAAI,CAAC;4BACH,aAAa,EAAE;gCACb,GAAG,EAAE,KAAK;6BACX;yBACF,CAAC,CAAA;oBACJ,CAAC,EAAE,IAAI,CAAC,CAAA;gBACV,CAAC,CAAC;qBACD,UAAU,CAAC,UAAC,QAAQ,EAAE,IAAI;oBACzB,UAAU,CAAC;wBACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;wBACrB,IAAI,CAAC,QAAQ,CAAC,CAAA;oBAChB,CAAC,EAAE,IAAI,CAAC,CAAA;gBACV,CAAC,CAAC;qBACD,SAAS,CAAC,UAAC,QAAQ,EAAE,IAAI;oBACxB,UAAU,CAAC;wBACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;wBACrB,IAAI,CAAC,QAAQ,CAAC,CAAA;oBAChB,CAAC,EAAE,IAAI,CAAC,CAAA;gBACV,CAAC,CAAC;qBACD,IAAI,EAAE;qBACN,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;qBACjB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACzB,CAAC,2CAGM,CACS,CACH,CACpB,EA7EoB,CA6EpB,EAAA","sourcesContent":["import React, { createContext, useContext } from 'react'\nimport { FormDialog, FormItem, FormLayout, Input } from '@formily/arco'\nimport { createSchemaField } from '@formily/react'\nimport { Button } from '@arco-design/web-react'\n\nconst SchemaField = createSchemaField({\n  components: {\n    FormItem,\n    Input,\n  },\n})\n\nconst Context = createContext(null)\n\nconst PortalId = '可以传，也可以不传的ID，默认是form-dialog'\n\nexport default () => (\n  <Context.Provider value=\"自定义上下文可以直接传到弹窗内部，只需要ID一致即可\">\n    <FormDialog.Portal id={PortalId}>\n      <Button\n        onClick={() => {\n          FormDialog('弹窗表单', PortalId, (form) => {\n            console.log(useContext(Context))\n            return (\n              <FormLayout labelCol={6} wrapperCol={10}>\n                <SchemaField>\n                  <SchemaField.String\n                    name=\"aaa\"\n                    required\n                    title=\"输入框1\"\n                    x-decorator=\"FormItem\"\n                    x-component=\"Input\"\n                  />\n                  <SchemaField.String\n                    name=\"bbb\"\n                    required\n                    title=\"输入框2\"\n                    x-decorator=\"FormItem\"\n                    x-component=\"Input\"\n                  />\n                  <SchemaField.String\n                    name=\"ccc\"\n                    required\n                    title=\"输入框3\"\n                    x-decorator=\"FormItem\"\n                    x-component=\"Input\"\n                  />\n                  <SchemaField.String\n                    name=\"ddd\"\n                    required\n                    title=\"输入框4\"\n                    x-decorator=\"FormItem\"\n                    x-component=\"Input\"\n                  />\n                </SchemaField>\n                <FormDialog.Footer>\n                  <span style={{ marginLeft: 4 }}>\n                    扩展文案：{form.values.aaa}\n                  </span>\n                </FormDialog.Footer>\n              </FormLayout>\n            )\n          })\n            .forOpen((formInst, next) => {\n              setTimeout(() => {\n                next({\n                  initialValues: {\n                    aaa: '123',\n                  },\n                })\n              }, 1000)\n            })\n            .forConfirm((formInst, next) => {\n              setTimeout(() => {\n                console.log(formInst)\n                next(formInst)\n              }, 1000)\n            })\n            .forCancel((formInst, next) => {\n              setTimeout(() => {\n                console.log(formInst)\n                next(formInst)\n              }, 1000)\n            })\n            .open()\n            .then(console.log)\n            .catch(console.error)\n        }}\n      >\n        点我打开表单\n      </Button>\n    </FormDialog.Portal>\n  </Context.Provider>\n)\n"]}