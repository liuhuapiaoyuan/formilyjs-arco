{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["array-tabs/demo/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAqC;AACrC,wCAAoE;AACpE,sCAA0C;AAC1C,oDAA2D;AAC3D,sCAA0C;AAE1C,IAAM,MAAM,GAAY;IACtB,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,YAAY,EAAE;YACZ,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,OAAO;YACd,aAAa,EAAE,UAAU;YACzB,QAAQ,EAAE,CAAC;YACX,aAAa,EAAE,WAAW;YAC1B,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,aAAa,EAAE,UAAU;gBACzB,QAAQ,EAAE,IAAI;gBACd,aAAa,EAAE,OAAO;gBACtB,mBAAmB,EAAE;oBACnB,SAAS,EAAE,IAAI;iBAChB;aACF;SACF;QACD,KAAK,EAAE;YACL,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,MAAM;YACb,aAAa,EAAE,UAAU;YACzB,QAAQ,EAAE,CAAC;YACX,aAAa,EAAE,WAAW;YAC1B,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,aAAa,EAAE,UAAU;wBACzB,KAAK,EAAE,KAAK;wBACZ,QAAQ,EAAE,IAAI;wBACd,aAAa,EAAE,OAAO;qBACvB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,aAAa,EAAE,UAAU;wBACzB,KAAK,EAAE,KAAK;wBACZ,QAAQ,EAAE,IAAI;wBACd,aAAa,EAAE,OAAO;qBACvB;iBACF;aACF;SACF;KACF;CACF,CAAA;AACD,IAAM,IAAI,GAAG,IAAA,iBAAU,GAAE,CAAA;AAEzB,mBAAe;IACb,IAAM,OAAO,GAAG,IAAA,cAAM,GAAO,CAAA;IAC7B,OAAO,CACL;QACE,8BAAC,oBAAY,IAAC,IAAI,EAAE,IAAI;YACtB,8BAAC,iBAAU,IAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,GAAI;YAC5C,8BAAC,oBAAY,QACV,UAAC,IAAI,IAAK,OAAA,CACT;gBACE,8BAAC,sBAAU,CAAC,IAAI,IAAC,IAAI,UAClB,IAAI,CAAC,SAAS,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CACb,CACd,CACP,EANU,CAMV,CACY;YACf,8BAAC,kBAAM,IAAC,OAAO,EAAE,8BAAM,OAAA,MAAA,MAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,0CAAE,OAAO,kDAAI,0CAAE,MAAM,EAAE,CAAA,EAAA,mBAErD,CACI,CACX,CACP,CAAA;AACH,CAAC,EAAA","sourcesContent":["import React, { useRef } from 'react'\nimport { FormConsumer, FormProvider, ISchema } from '@formily/react'\nimport { SchemaForm } from '@formily/arco'\nimport { Button, Typography } from '@arco-design/web-react'\nimport { createForm } from '@formily/core'\n\nconst schema: ISchema = {\n  type: 'object',\n  properties: {\n    string_array: {\n      type: 'array',\n      title: '字符串数组',\n      'x-decorator': 'FormItem',\n      maxItems: 3,\n      'x-component': 'ArrayTabs',\n      items: {\n        type: 'string',\n        'x-decorator': 'FormItem',\n        required: true,\n        'x-component': 'Input',\n        'x-component-props': {\n          autoFocus: true,\n        },\n      },\n    },\n    array: {\n      type: 'array',\n      title: '对象数组',\n      'x-decorator': 'FormItem',\n      maxItems: 3,\n      'x-component': 'ArrayTabs',\n      items: {\n        type: 'object',\n        properties: {\n          aaa: {\n            type: 'string',\n            'x-decorator': 'FormItem',\n            title: 'AAA',\n            required: true,\n            'x-component': 'Input',\n          },\n          bbb: {\n            type: 'string',\n            'x-decorator': 'FormItem',\n            title: 'BBB',\n            required: true,\n            'x-component': 'Input',\n          },\n        },\n      },\n    },\n  },\n}\nconst form = createForm()\n\nexport default () => {\n  const formRef = useRef<any>()\n  return (\n    <div>\n      <FormProvider form={form}>\n        <SchemaForm ref={formRef} schema={schema} />\n        <FormConsumer>\n          {(form) => (\n            <div>\n              <Typography.Text code>\n                {JSON.stringify(form?.values)}\n              </Typography.Text>\n            </div>\n          )}\n        </FormConsumer>\n        <Button onClick={() => formRef?.current?.getForm?.()?.submit()}>\n          提交\n        </Button>\n      </FormProvider>\n    </div>\n  )\n}\n"]}