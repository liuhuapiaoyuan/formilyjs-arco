{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["password/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAyB;AACzB,wCAAuD;AACvD,oDAA8C;AAE9C,yDAAsD;AACtD,gDAA6C;AAUhC,QAAA,QAAQ,GAAG,IAAA,eAAO,EAAC,UAAC,KAAqB;IAC5C,IAAA,KAAK,GAA0C,KAAK,MAA/C,EAAE,SAAS,GAA+B,KAAK,UAApC,EAAE,aAAa,GAAgB,KAAK,cAArB,EAAK,MAAM,UAAK,KAAK,EAAtD,uCAA8C,CAAF,CAAU;IAC5D,OAAO,CACL,wCAAM,SAAS,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,CAAC,CAAC;QAC7B,8BAAC,iBAAK,CAAC,QAAQ,eAAK,MAAM,IAAE,KAAK,EAAE,KAAK,IAAI;QAC3C,aAAa,IAAI,CAChB,8BAAC,oCAAgB,IAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,IACnC,UAAC,KAAK,IAAK,OAAA,8BAAC,aAAa,IAAC,KAAK,EAAE,KAAK,GAAI,EAA/B,CAA+B,CAC1B,CACpB,CACI,CACR,CAAA;AACH,CAAC,EAAE,IAAA,qBAAa,EAAC,0BAAW,CAAC,KAAK,CAAC,CAAC,CAAA;AAEpC,kBAAe,gBAAQ,CAAA;AAEvB,IAAM,UAAU,GAAwB;IACtC,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;IACT,GAAG,EAAE,CAAC;IACN,UAAU,EAAE,MAAM;IAClB,KAAK,EAAE,CAAC;IACR,SAAS,EAAE,oBAAoB;CAChC,CAAA;AACD;;;;GAIG;AACH,SAAS,aAAa,CAAC,EAA4B;QAA1B,KAAK,WAAA;IAC5B,OAAO,CACL,uCACE,KAAK,EAAE;YACL,UAAU,EAAE,SAAS;YACrB,YAAY,EAAE,CAAC;YACf,QAAQ,EAAE,UAAU;SACrB;QAED,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;QAC9C,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;QAC9C,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;QAC9C,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;QAC9C,uCACE,KAAK,EAAE;gBACL,QAAQ,EAAE,UAAU;gBACpB,eAAe,EAAE,iDAAiD;gBAClE,UAAU,EAAE,uBAAuB;gBACnC,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,MAAM;gBACb,SAAS,EAAE,CAAC;gBACZ,QAAQ,EAAE,sBAAe,KAAK,iBAAO,KAAK,mBAAgB;aAC3D,GACD,CACE,CACP,CAAA;AACH,CAAC","sourcesContent":["import React from 'react'\nimport { connect, mapReadPretty } from '@formily/react'\nimport { Input } from '@arco-design/web-react'\nimport { InputPasswordProps } from '@arco-design/web-react/es/input/interface'\nimport { PasswordStrength } from './password-strength'\nimport { PreviewText } from '../preview-text'\n\nexport interface IPasswordProps extends InputPasswordProps {\n  /**\n   * 开启检测\n   * @default true\n   */\n  checkStrength: boolean\n}\n\nexport const Password = connect((props: IPasswordProps) => {\n  const { value, className, checkStrength, ...others } = props\n  return (\n    <span className={className?.[0]}>\n      <Input.Password {...others} value={value} />\n      {checkStrength && (\n        <PasswordStrength value={String(value)}>\n          {(score) => <PasswordScore score={score} />}\n        </PasswordStrength>\n      )}\n    </span>\n  )\n}, mapReadPretty(PreviewText.Input))\n\nexport default Password\n\nconst blockStyle: React.CSSProperties = {\n  position: 'absolute',\n  zIndex: 1,\n  height: 8,\n  top: 0,\n  background: '#fff',\n  width: 1,\n  transform: 'translate(-50%, 0)',\n}\n/**\n * 密码强度\n * @param param0\n * @returns\n */\nfunction PasswordScore({ score }: { score: number }) {\n  return (\n    <div\n      style={{\n        background: '#e0e0e0',\n        marginBottom: 3,\n        position: 'relative',\n      }}\n    >\n      <div style={{ ...blockStyle, left: '20%' }} />\n      <div style={{ ...blockStyle, left: '40%' }} />\n      <div style={{ ...blockStyle, left: '60%' }} />\n      <div style={{ ...blockStyle, left: '80%' }} />\n      <div\n        style={{\n          position: 'relative',\n          backgroundImage: '-webkit-linear-gradient(left, #ff5500, #ff9300)',\n          transition: 'all 0.35s ease-in-out',\n          height: 8,\n          width: '100%',\n          marginTop: 5,\n          clipPath: `polygon(0 0,${score}% 0,${score}% 100%,0 100%)`,\n        }}\n      />\n    </div>\n  )\n}\n"]}