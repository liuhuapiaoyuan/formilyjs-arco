{"version":3,"file":"index_1.js","sourceRoot":"lib/","sources":["schema-form/demo/index_1.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAE1C,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAA;AAE/C,IAAM,MAAM,GAAG;IACb,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,MAAM,EAAE;YACN,IAAI,EAAE,QAAQ;YACd,aAAa,EAAE,UAAU;YACzB,aAAa,EAAE,QAAQ;YACvB,aAAa,EAAE,kCAAkC;SAClD;KACF;CACS,CAAA;AAEZ,IAAM,KAAK,GAAG;IACN,QAAQ;;;gBACZ,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO;wBACzB,UAAU,CAAC;4BACT,OAAO,CAAC;gCACN;oCACE,KAAK,EAAE,KAAK;oCACZ,KAAK,EAAE,KAAK;iCACb;gCACD;oCACE,KAAK,EAAE,KAAK;oCACZ,KAAK,EAAE,KAAK;iCACb;6BACF,CAAC,CAAA;wBACJ,CAAC,EAAE,IAAI,CAAC,CAAA;oBACV,CAAC,CAAC,EAAA;;;KACH;CACF,CAAA;AAED,gBAAe;IACb,IAAM,OAAO,GAAG,MAAM,EAAO,CAAA;IAC7B,IAAM,WAAW,GAAG,WAAW,CAAC;;QAC9B,OAAO,CAAC,GAAG,CAAC,MAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,0CAAE,OAAO,EAAE,0CAAE,MAAM,CAAC,CAAA;IAClD,CAAC,EAAE,EAAE,CAAC,CAAA;IACN,OAAO,CACL,6BAAK,SAAS,EAAC,MAAM;QACnB,oBAAC,UAAU,IAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,GAAI;QAC1D,oBAAC,MAAM,IAAC,OAAO,EAAE,WAAW,+BAAe,CACvC,CACP,CAAA;AACH,CAAC,EAAA","sourcesContent":["import React, { useCallback } from 'react'\nimport { SchemaForm } from '@formily/arco'\nimport { ISchema } from '@formily/json-schema'\nimport { useRef } from 'react'\nimport { Button } from '@arco-design/web-react'\n\nconst schema = {\n  type: 'object',\n  properties: {\n    select: {\n      type: 'string',\n      'x-decorator': 'FormItem',\n      'x-component': 'Select',\n      'x-reactions': '{{useAsyncDataSource(loadData)}}',\n    },\n  },\n} as ISchema\n\nconst scope = {\n  async loadData() {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          {\n            label: 'CCC',\n            value: 'ccc',\n          },\n          {\n            label: 'DDD',\n            value: 'ddd',\n          },\n        ])\n      }, 1000)\n    })\n  },\n}\n\nexport default () => {\n  const formRef = useRef<any>()\n  const handleClick = useCallback(() => {\n    console.log(formRef?.current?.getForm()?.values)\n  }, [])\n  return (\n    <div className=\"wrap\">\n      <SchemaForm ref={formRef} schema={schema} scope={scope} />\n      <Button onClick={handleClick}>点击测试</Button>\n    </div>\n  )\n}\n"]}