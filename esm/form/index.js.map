{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAGL,MAAM,GAEP,MAAM,eAAe,CAAA;AACtB,OAAO,EACL,YAAY,EAEZ,WAAW,EACX,aAAa,GACd,MAAM,gBAAgB,CAAA;AACvB,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,UAAU,EAAoB,MAAM,gBAAgB,CAAA;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAA;AAC7C,OAAO,cAAc,CAAA;AAWrB,MAAM,CAAC,IAAM,IAAI,GAAiD,UAAC,EAOlE;IANC,IAAA,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,YAAY,kBAAA,EACZ,kBAAkB,wBAAA,EAClB,sBAAsB,4BAAA,EACnB,KAAK,cANyD,qFAOlE,CADS;IAER,IAAM,GAAG,GAAG,aAAa,EAAE,CAAA;IAC3B,IAAM,aAAa,GAAG,UAAC,IAA4B,IAAK,OAAA,CACtD,oBAAC,WAAW,IAAC,SAAS,EAAE,cAAM,OAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAzC,CAAyC;QACrE,oBAAC,WAAW,CAAC,WAAW,IAAC,KAAK,EAAE,sBAAsB;YACpD,oBAAC,UAAU,eAAK,KAAK,GAClB,KAAK,CAAC,aAAa,CAClB,SAAmB,EACnB;gBACE,QAAQ,YAAC,CAAkB;;oBACzB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,eAAe,iDAAI,CAAA;oBACtB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,cAAc,iDAAI,CAAA;oBACrB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;gBACrD,CAAC;aACF,EACD,KAAK,CAAC,QAAQ,CACf,CACU,CACW,CACd,CACf,EAlBuD,CAkBvD,CAAA;IACD,IAAI,IAAI;QACN,OAAO,oBAAC,YAAY,IAAC,IAAI,EAAE,IAAI,IAAG,aAAa,CAAC,IAAI,CAAC,CAAgB,CAAA;IACvE,IAAI,CAAC,GAAG;QAAE,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAA;IAClE,OAAO,aAAa,CAAC,GAAG,CAAC,CAAA;AAC3B,CAAC,CAAA;AAED,IAAI,CAAC,YAAY,GAAG;IAClB,SAAS,EAAE,MAAM;CAClB,CAAA;AAED,eAAe,IAAI,CAAA","sourcesContent":["import {\r\n  Form as FormType,\r\n  IFormFeedback,\r\n  isForm,\r\n  ObjectField,\r\n} from '@formily/core'\r\nimport {\r\n  FormProvider,\r\n  JSXComponent,\r\n  RecordScope,\r\n  useParentForm,\r\n} from '@formily/react'\r\nimport React from 'react'\r\nimport { FormLayout, IFormLayoutProps } from '../form-layout'\r\nimport { PreviewText } from '../preview-text'\r\nimport './index.scss'\r\n\r\n\r\nexport interface FormProps extends IFormLayoutProps {\r\n  form?: FormType\r\n  component?: JSXComponent\r\n  onAutoSubmit?: (values: any) => any\r\n  onAutoSubmitFailed?: (feedbacks: IFormFeedback[]) => void\r\n  previewTextPlaceholder?: React.ReactNode\r\n}\r\n\r\nexport const Form: React.FC<React.PropsWithChildren<FormProps>> = ({\r\n  form,\r\n  component,\r\n  onAutoSubmit,\r\n  onAutoSubmitFailed,\r\n  previewTextPlaceholder,\r\n  ...props\r\n}) => {\r\n  const top = useParentForm()\r\n  const renderContent = (form: FormType | ObjectField) => (\r\n    <RecordScope getRecord={() => (isForm(form) ? form.values : form.value)}>\r\n      <PreviewText.Placeholder value={previewTextPlaceholder}>\r\n        <FormLayout {...props}>\r\n          {React.createElement(\r\n            component as string,\r\n            {\r\n              onSubmit(e: React.FormEvent) {\r\n                e?.stopPropagation?.()\r\n                e?.preventDefault?.()\r\n                form.submit(onAutoSubmit).catch(onAutoSubmitFailed)\r\n              },\r\n            },\r\n            props.children\r\n          )}\r\n        </FormLayout>\r\n      </PreviewText.Placeholder>\r\n    </RecordScope>\r\n  )\r\n  if (form)\r\n    return <FormProvider form={form}>{renderContent(form)}</FormProvider>\r\n  if (!top) throw new Error('must pass form instance by createForm')\r\n  return renderContent(top)\r\n}\r\n\r\nForm.defaultProps = {\r\n  component: 'form',\r\n}\r\n\r\nexport default Form"]}