{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["input/index.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAW,MAAM,gBAAgB,CAAA;AAC1E,OAAO,EAAE,KAAK,IAAI,SAAS,EAAE,MAAM,wBAAwB,CAAA;AAC3D,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAA;AAEzD,OAAO,cAAc,CAAA;AACrB,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAA;AAC7C,IAAM,iBAAiB,GAAG,SAAS,CAAC,QAAQ,CAAA;AAE5C,IAAM,aAAa,GAAwB,OAAO,CAChD,SAAS,EACT,QAAQ,CACN;IACE,KAAK,EAAE,OAAO;CACf,EACD,UAAC,KAAK,EAAE,KAAK;IACX,6BACK,KAAK,KACR,MAAM,EAAE,CACN,kCACG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,SAAS,CAAC,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,YAAY,CAAC,CAAA,CAAC,CAAC,CAAC,CAC7C,oBAAC,WAAW,IAAC,IAAI,SAAG,CACrB,CAAC,CAAC,CAAC,CACF,KAAK,CAAC,MAAM,CACb,CACI,CACR,IACF;AACH,CAAC,CACF,EACD,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CACjC,CAAA;AACD,IAAM,QAAQ,GAAG,OAAO,CACtB,iBAAiB,EACjB,QAAQ,CAAC;IACP,KAAK,EAAE,OAAO;CACf,CAAC,EACF,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CACjC,CAAA;AAED,MAAM,CAAC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE;IAChD,QAAQ,UAAA;CACT,CAAC,CAAA;AAEF,eAAe,KAAK,CAAA","sourcesContent":["import React from 'react'\nimport { connect, mapProps, mapReadPretty, ReactFC } from '@formily/react'\nimport { Input as ArcoInput } from '@arco-design/web-react'\nimport { IconLoading } from '@arco-design/web-react/icon'\nimport type { InputProps } from '@arco-design/web-react/es/input'\nimport './index.scss'\nimport { PreviewText } from '../preview-text'\nconst ArcoInputTextArea = ArcoInput.TextArea\n\nconst InternalInput: ReactFC<InputProps> = connect(\n  ArcoInput,\n  mapProps(\n    {\n      value: 'value',\n    },\n    (props, field) => {\n      return {\n        ...props,\n        suffix: (\n          <span>\n            {field?.['loading'] || field?.['validating'] ? (\n              <IconLoading spin />\n            ) : (\n              props.suffix\n            )}\n          </span>\n        ),\n      }\n    }\n  ),\n  mapReadPretty(PreviewText.Input)\n)\nconst TextArea = connect(\n  ArcoInputTextArea,\n  mapProps({\n    value: 'value',\n  }),\n  mapReadPretty(PreviewText.Input)\n)\n\nexport const Input = Object.assign(InternalInput, {\n  TextArea,\n})\n\nexport default Input\n"]}