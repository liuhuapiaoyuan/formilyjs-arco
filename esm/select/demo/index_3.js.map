{"version":3,"file":"index_3.js","sourceRoot":"lib/","sources":["select/demo/index_3.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Select, FormItem, FormButtonGroup, Submit } from '@formily/arco'\r\nimport { createForm } from '@formily/core'\r\nimport { FormProvider, createSchemaField, ISchema } from '@formily/react'\r\nimport { action } from '@formily/reactive'\r\n\r\nconst useAsyncDataSource = (service) => (field) => {\r\n  field.loading = true\r\n  service(field).then(\r\n    action?.bound?.((data) => {\r\n      if (data.findIndex(({ value }) => value == field.value) == -1) {\r\n        field.value = undefined\r\n      }\r\n      field.dataSource = data\r\n      field.loading = false\r\n    })\r\n  )\r\n}\r\n\r\nconst loadData = (linkage: number) => {\r\n  return async () => {\r\n    if (!linkage) return []\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (linkage === 1) {\r\n          resolve([\r\n            {\r\n              label: 'AAA',\r\n              value: 'aaa',\r\n            },\r\n            {\r\n              label: 'BBB',\r\n              value: 'ccc',\r\n            },\r\n          ])\r\n        } else if (linkage === 2) {\r\n          resolve([\r\n            {\r\n              label: 'CCC',\r\n              value: 'ccc',\r\n            },\r\n            {\r\n              label: 'DDD',\r\n              value: 'ddd',\r\n            },\r\n          ])\r\n        }\r\n      }, 1500)\r\n    })\r\n  }\r\n}\r\n\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    Select,\r\n    FormItem,\r\n  },\r\n  scope: {\r\n    useAsyncDataSource,\r\n    loadData,\r\n  },\r\n})\r\n\r\nconst form = createForm()\r\n\r\nconst schema: any = {\r\n  type: 'object',\r\n  properties: {\r\n    linkage: {\r\n      type: 'string',\r\n      title: '联动选择框',\r\n      enum: [\r\n        { label: '发请求1', value: 1 },\r\n        { label: '发请求2', value: 2 },\r\n      ],\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'Select',\r\n      'x-component-props': {\r\n        style: {\r\n          width: 120,\r\n        },\r\n      },\r\n    },\r\n    select: {\r\n      type: 'string',\r\n      title: '异步选择框',\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'Select',\r\n      'x-component-props': {\r\n        style: {\r\n          width: 120,\r\n        },\r\n      },\r\n      'x-reactions': {\r\n        dependencies: ['linkage'],\r\n        fulfill: {\r\n          schema: { 'x-visible': '{{$deps[0] !== undefined}}' },\r\n          run: 'useAsyncDataSource(loadData($deps[0]))($self)',\r\n        },\r\n      },\r\n    },\r\n  },\r\n} as ISchema\r\n\r\nexport default () => (\r\n  <FormProvider form={form}>\r\n    <SchemaField schema={schema} scope={{ useAsyncDataSource, loadData }} />\r\n    <FormButtonGroup>\r\n      <Submit onSubmit={console.log}>提交</Submit>\r\n    </FormButtonGroup>\r\n  </FormProvider>\r\n)\r\n"]}