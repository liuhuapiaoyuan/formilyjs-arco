{"code":"import { __assign, __rest } from \"tslib\";\r\nimport React, { Fragment, useMemo } from 'react';\r\nimport { Collapse, Badge } from '@arco-design/web-react';\r\nimport { model } from '@formily/reactive';\r\nimport { useField, observer, useFieldSchema, RecursionField, } from '@formily/react';\r\nimport cls from 'classnames';\r\nimport { usePrefixCls } from '../__builtins__';\r\nimport { toArr } from '@formily/shared';\r\nvar usePanels = function () {\r\n    var collapseField = useField();\r\n    var schema = useFieldSchema();\r\n    var panels = [];\r\n    schema.mapProperties(function (schema, name) {\r\n        var _a, _b, _c;\r\n        var field = collapseField.query(collapseField.address.concat(name)).take();\r\n        if ((field === null || field === void 0 ? void 0 : field.display) === 'none' || (field === null || field === void 0 ? void 0 : field.display) === 'hidden') {\r\n            return;\r\n        }\r\n        if (((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('CollapsePanel')) > -1) {\r\n            panels.push({\r\n                name: name,\r\n                props: __assign(__assign({}, schema === null || schema === void 0 ? void 0 : schema['x-component-props']), { key: ((_b = schema === null || schema === void 0 ? void 0 : schema['x-component-props']) === null || _b === void 0 ? void 0 : _b.key) || name, name: ((_c = schema === null || schema === void 0 ? void 0 : schema['x-component-props']) === null || _c === void 0 ? void 0 : _c.name) || name }),\r\n                schema: schema,\r\n            });\r\n        }\r\n    });\r\n    return panels;\r\n};\r\nvar createFormCollapse = function (defaultActiveKeys) {\r\n    var formCollapse = model({\r\n        activeKeys: defaultActiveKeys || [],\r\n        setActiveKeys: function (keys) {\r\n            formCollapse.activeKeys = keys;\r\n        },\r\n        hasActiveKey: function (key) {\r\n            if (Array.isArray(formCollapse.activeKeys)) {\r\n                if (formCollapse.activeKeys.includes(key)) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (formCollapse.activeKeys == key) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        addActiveKey: function (key) {\r\n            if (formCollapse.hasActiveKey(key)) {\r\n                return;\r\n            }\r\n            formCollapse.activeKeys = toArr(formCollapse.activeKeys).concat(key);\r\n        },\r\n        removeActiveKey: function (key) {\r\n            if (Array.isArray(formCollapse.activeKeys)) {\r\n                formCollapse.activeKeys = formCollapse.activeKeys.filter(function (item) { return item != key; });\r\n            }\r\n            else {\r\n                formCollapse.activeKeys = '';\r\n            }\r\n        },\r\n        toggleActiveKey: function (key) {\r\n            if (formCollapse.hasActiveKey(key)) {\r\n                formCollapse.removeActiveKey(key);\r\n            }\r\n            else {\r\n                formCollapse.addActiveKey(key);\r\n            }\r\n        },\r\n    });\r\n    return formCollapse;\r\n};\r\nexport var FormCollapse = observer(function (_a) {\r\n    var formCollapse = _a.formCollapse, props = __rest(_a, [\"formCollapse\"]);\r\n    var field = useField();\r\n    var panels = usePanels();\r\n    var prefixCls = usePrefixCls('collapse');\r\n    var _formCollapse = useMemo(function () { return formCollapse !== null && formCollapse !== void 0 ? formCollapse : createFormCollapse(props.defaultActiveKey); }, [formCollapse, props.defaultActiveKey]);\r\n    var activeKey = props.activeKey || (_formCollapse === null || _formCollapse === void 0 ? void 0 : _formCollapse.activeKeys);\r\n    var badgedHeader = function (key, props) {\r\n        var errors = field.form.queryFeedbacks({\r\n            type: 'error',\r\n            address: \"\".concat(field.address.concat(key), \".*\"),\r\n        });\r\n        if (errors.length) {\r\n            return (React.createElement(Badge, { className: \"errors-badge\", count: errors.length }, props.header));\r\n        }\r\n        return props.header;\r\n    };\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"div\", null, JSON.stringify(activeKey)),\r\n        React.createElement(Collapse, __assign({}, props, { className: cls(prefixCls, props.className), activeKey: \"\".concat(activeKey), onChange: function (key, keys, e) {\r\n                var _a, _b;\r\n                (_a = props === null || props === void 0 ? void 0 : props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, key, keys, e);\r\n                (_b = _formCollapse === null || _formCollapse === void 0 ? void 0 : _formCollapse.setActiveKeys) === null || _b === void 0 ? void 0 : _b.call(_formCollapse, key);\r\n            } }), panels.map(function (_a, index) {\r\n            var props = _a.props, schema = _a.schema, name = _a.name;\r\n            return (React.createElement(Collapse.Item, __assign({ key: index }, props, { header: badgedHeader(name, props), destroyOnHide: false }),\r\n                React.createElement(RecursionField, { schema: schema, name: name })));\r\n        }))));\r\n});\r\nvar CollapsePanel = function (_a) {\r\n    var children = _a.children;\r\n    return (React.createElement(Fragment, null, children));\r\n};\r\nFormCollapse.CollapsePanel = CollapsePanel;\r\nFormCollapse.createFormCollapse = createFormCollapse;\r\nexport default FormCollapse;\r\n//# sourceMappingURL=index.js.map","references":["H:/projects/formilyjs-arco/node_modules/@types/react/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/reactive/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/collapse/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/collapse/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/react/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/json-schema/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/classnames/index.d.ts","H:/projects/formilyjs-arco/packages/components/src/__builtins__/index.ts","H:/projects/formilyjs-arco/node_modules/@formily/shared/esm/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/form-collapse/index.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Fragment, useMemo } from 'react'\\nimport { Collapse, Badge } from '@arco-design/web-react'\\nimport { model } from '@formily/reactive'\\nimport { CollapseProps } from '@arco-design/web-react/es/collapse'\\nimport { CollapseItemProps } from '@arco-design/web-react/es/collapse'\\nimport {\\n  useField,\\n  observer,\\n  useFieldSchema,\\n  RecursionField,\\n} from '@formily/react'\\nimport { Schema, SchemaKey } from '@formily/json-schema'\\nimport cls from 'classnames'\\nimport { usePrefixCls } from '../__builtins__'\\nimport { toArr } from '@formily/shared'\\n\\ntype ActiveKeys = string | number | Array<string | number>\\n\\ntype ActiveKey = string | number\\ninterface IFormCollapse {\\n  activeKeys: ActiveKeys\\n  hasActiveKey(key: ActiveKey): boolean\\n  setActiveKeys(key: ActiveKeys): void\\n  addActiveKey(key: ActiveKey): void\\n  removeActiveKey(key: ActiveKey): void\\n  toggleActiveKey(key: ActiveKey): void\\n}\\n\\ninterface IFormCollapseProps extends CollapseProps {\\n  formCollapse?: IFormCollapse\\n}\\n\\ntype ComposedFormCollapse = React.FC<IFormCollapseProps> & {\\n  CollapsePanel?: React.FC<CollapseItemProps>\\n  createFormCollapse?: (defaultActiveKeys?: ActiveKeys) => IFormCollapse\\n}\\n\\nconst usePanels = () => {\\n  const collapseField = useField()\\n  const schema = useFieldSchema()\\n  const panels: { name: SchemaKey; props: any; schema: Schema }[] = []\\n  schema.mapProperties((schema, name) => {\\n    const field = collapseField.query(collapseField.address.concat(name)).take()\\n    if (field?.display === 'none' || field?.display === 'hidden') {\\n      return\\n    }\\n    if (schema['x-component']?.indexOf('CollapsePanel') > -1) {\\n      panels.push({\\n        name,\\n        props: {\\n          ...schema?.['x-component-props'],\\n          key: schema?.['x-component-props']?.key || name,\\n          name: schema?.['x-component-props']?.name || name,\\n        },\\n        schema,\\n      })\\n    }\\n  })\\n  return panels\\n}\\n\\nconst createFormCollapse = (defaultActiveKeys?: ActiveKeys) => {\\n  const formCollapse = model({\\n    activeKeys: defaultActiveKeys || [],\\n    setActiveKeys(keys: ActiveKeys) {\\n      formCollapse.activeKeys = keys\\n    },\\n    hasActiveKey(key: ActiveKey) {\\n      if (Array.isArray(formCollapse.activeKeys)) {\\n        if (formCollapse.activeKeys.includes(key)) {\\n          return true\\n        }\\n      } else if (formCollapse.activeKeys == key) {\\n        return true\\n      }\\n      return false\\n    },\\n    addActiveKey(key: ActiveKey) {\\n      if (formCollapse.hasActiveKey(key)) {\\n        return\\n      }\\n      formCollapse.activeKeys = toArr(formCollapse.activeKeys).concat(key)\\n    },\\n    removeActiveKey(key: ActiveKey) {\\n      if (Array.isArray(formCollapse.activeKeys)) {\\n        formCollapse.activeKeys = formCollapse.activeKeys.filter(\\n          (item) => item != key\\n        )\\n      } else {\\n        formCollapse.activeKeys = ''\\n      }\\n    },\\n    toggleActiveKey(key: ActiveKey) {\\n      if (formCollapse.hasActiveKey(key)) {\\n        formCollapse.removeActiveKey(key)\\n      } else {\\n        formCollapse.addActiveKey(key)\\n      }\\n    },\\n  })\\n  return formCollapse\\n}\\n\\nexport const FormCollapse: ComposedFormCollapse = observer(\\n  ({ formCollapse, ...props }) => {\\n    const field = useField()\\n    const panels = usePanels()\\n    const prefixCls = usePrefixCls('collapse')\\n    const _formCollapse = useMemo(\\n      () => formCollapse ?? createFormCollapse(props.defaultActiveKey),\\n      [formCollapse, props.defaultActiveKey]\\n    )\\n    const activeKey = props.activeKey || _formCollapse?.activeKeys\\n\\n    const badgedHeader = (key: SchemaKey, props: any) => {\\n      const errors = field.form.queryFeedbacks({\\n        type: 'error',\\n        address: `${field.address.concat(key)}.*`,\\n      })\\n      if (errors.length) {\\n        return (\\n          <Badge className=\\\"errors-badge\\\" count={errors.length}>\\n            {props.header}\\n          </Badge>\\n        )\\n      }\\n      return props.header\\n    }\\n    return (\\n      <div>\\n        <div>{JSON.stringify(activeKey)}</div>\\n        <Collapse\\n          {...props}\\n          className={cls(prefixCls, props.className)}\\n          activeKey={`${activeKey}` as CollapseProps['activeKey']}\\n          onChange={(key, keys, e) => {\\n            props?.onChange?.(key, keys, e)\\n            _formCollapse?.setActiveKeys?.(key)\\n          }}\\n        >\\n          {panels.map(({ props, schema, name }, index) => (\\n            <Collapse.Item\\n              key={index}\\n              {...props}\\n              header={badgedHeader(name, props)}\\n              destroyOnHide={false}\\n            >\\n              <RecursionField schema={schema} name={name} />\\n            </Collapse.Item>\\n          ))}\\n        </Collapse>\\n      </div>\\n    )\\n  }\\n)\\n\\nconst CollapsePanel: React.FC<CollapseItemProps> = ({ children }) => (\\n  <Fragment>{children}</Fragment>\\n)\\n\\nFormCollapse.CollapsePanel = CollapsePanel\\nFormCollapse.createFormCollapse = createFormCollapse\\n\\nexport default FormCollapse\\n\"]}"}
