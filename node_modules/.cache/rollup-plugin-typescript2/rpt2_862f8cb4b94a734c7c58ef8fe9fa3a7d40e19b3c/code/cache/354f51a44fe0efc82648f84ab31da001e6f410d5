{"code":"import { __assign, __read, __rest } from \"tslib\";\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport { Card, Collapse, Empty } from '@arco-design/web-react';\r\nimport { RecursionField, useField, useFieldSchema, observer, } from '@formily/react';\r\nimport cls from 'classnames';\r\nimport ArrayBase from '../array-base';\r\nimport { usePrefixCls } from '../__builtins__';\r\nimport './index.scss';\r\nvar isAdditionComponent = function (schema) {\r\n    var _a;\r\n    return ((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('Addition')) > -1;\r\n};\r\nvar isIndexComponent = function (schema) {\r\n    var _a;\r\n    return ((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('Index')) > -1;\r\n};\r\nvar isRemoveComponent = function (schema) {\r\n    var _a;\r\n    return ((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('Remove')) > -1;\r\n};\r\nvar isMoveUpComponent = function (schema) {\r\n    var _a;\r\n    return ((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('MoveUp')) > -1;\r\n};\r\nvar isMoveDownComponent = function (schema) {\r\n    var _a;\r\n    return ((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('MoveDown')) > -1;\r\n};\r\nvar isOperationComponent = function (schema) {\r\n    return (isAdditionComponent(schema) ||\r\n        isRemoveComponent(schema) ||\r\n        isMoveDownComponent(schema) ||\r\n        isMoveUpComponent(schema));\r\n};\r\nvar range = function (count) { return Array.from({ length: count }).map(function (_, i) { return i; }); };\r\nvar takeDefaultActiveKeys = function (dataSourceLength, defaultOpenPanelCount) {\r\n    if (defaultOpenPanelCount === void 0) { defaultOpenPanelCount = Infinity; }\r\n    if (dataSourceLength < defaultOpenPanelCount)\r\n        return range(dataSourceLength);\r\n    return range(defaultOpenPanelCount);\r\n};\r\nvar insertActiveKeys = function (activeKeys, index) {\r\n    if (activeKeys.length <= index)\r\n        return activeKeys.concat(index);\r\n    return activeKeys.reduce(function (buf, key) {\r\n        if (key < index)\r\n            return buf.concat(key);\r\n        if (key === index)\r\n            return buf.concat([key, key + 1]);\r\n        return buf.concat(key + 1);\r\n    }, []);\r\n};\r\nexport var ArrayCollapse = observer(function (props) {\r\n    var arrayBaseProps = props.arrayBaseProps, respProps = __rest(props, [\"arrayBaseProps\"]);\r\n    var field = useField();\r\n    var dataSource = Array.isArray(field.value) ? field.value : [];\r\n    var _a = __read(useState(takeDefaultActiveKeys(dataSource.length, respProps.defaultOpenPanelCount)), 2), activeKeys = _a[0], setActiveKeys = _a[1];\r\n    var schema = useFieldSchema();\r\n    var prefixCls = usePrefixCls('array-collapse', respProps);\r\n    useEffect(function () {\r\n        if (!field.modified && dataSource.length) {\r\n            setActiveKeys(takeDefaultActiveKeys(dataSource.length, respProps.defaultOpenPanelCount));\r\n        }\r\n    }, [dataSource.length, field]);\r\n    if (!schema)\r\n        throw new Error('can not found schema object');\r\n    var renderAddition = function () {\r\n        return schema.reduceProperties(function (addition, schema, key) {\r\n            if (isAdditionComponent(schema)) {\r\n                return React.createElement(RecursionField, { schema: schema, name: key });\r\n            }\r\n            return addition;\r\n        }, null);\r\n    };\r\n    var renderEmpty = function () {\r\n        if (dataSource.length)\r\n            return;\r\n        return (React.createElement(Card, { className: cls(\"\".concat(prefixCls, \"-item\"), respProps.className) },\r\n            React.createElement(Empty, null)));\r\n    };\r\n    var renderItems = function () {\r\n        return (React.createElement(Collapse, __assign({}, respProps, { activeKey: activeKeys.map(function (z) { return \"\".concat(z); }), onChange: function (_key, keys) { return setActiveKeys(keys.map(Number)); }, className: cls(\"\".concat(prefixCls, \"-item\"), respProps.className) }), dataSource.map(function (item, index) {\r\n            var items = Array.isArray(schema.items)\r\n                ? schema.items[index] || schema.items[0]\r\n                : schema.items;\r\n            var panelProps = field\r\n                .query(\"\".concat(field.address, \".\").concat(index))\r\n                .get('componentProps');\r\n            var props = items === null || items === void 0 ? void 0 : items['x-component-props'];\r\n            var extra = (React.createElement(ArrayBase.Item, { index: index, record: item },\r\n                React.createElement(RecursionField, { schema: items, name: index, filterProperties: function (schema) {\r\n                        if (!isOperationComponent(schema))\r\n                            return false;\r\n                        return true;\r\n                    }, onlyRenderProperties: true }), props === null || props === void 0 ? void 0 :\r\n                props.extra));\r\n            var content = (React.createElement(RecursionField, { schema: items, name: index, filterProperties: function (schema) {\r\n                    if (isIndexComponent(schema))\r\n                        return false;\r\n                    if (isOperationComponent(schema))\r\n                        return false;\r\n                    return true;\r\n                } }));\r\n            return (React.createElement(Collapse.Item, __assign({}, props, panelProps, { key: index, name: index + '', \r\n                //  header={header()}\r\n                // header 仅为 string 时，extra 才可用\r\n                extra: extra }),\r\n                React.createElement(ArrayBase.Item, { index: index, key: index, record: item }, content)));\r\n        })));\r\n    };\r\n    return (React.createElement(ArrayBase, __assign({}, arrayBaseProps, { onAdd: function (index) {\r\n            var _a;\r\n            setActiveKeys(insertActiveKeys(activeKeys, index));\r\n            (_a = arrayBaseProps === null || arrayBaseProps === void 0 ? void 0 : arrayBaseProps.onAdd) === null || _a === void 0 ? void 0 : _a.call(arrayBaseProps, index);\r\n        } }),\r\n        renderEmpty(),\r\n        renderItems(),\r\n        renderAddition()));\r\n});\r\nvar CollapsePanel = function (_a) {\r\n    var children = _a.children;\r\n    return React.createElement(Fragment, null, children);\r\n};\r\nCollapsePanel.displayName = 'CollapsePanel';\r\nArrayCollapse.defaultProps = {\r\n    defaultOpenPanelCount: 5,\r\n};\r\nArrayCollapse.displayName = 'ArrayCollapse';\r\nArrayCollapse.CollapsePanel = CollapsePanel;\r\nArrayBase.mixin(ArrayCollapse);\r\nexport default ArrayCollapse;\r\n//# sourceMappingURL=index.js.map","references":["H:/projects/formilyjs-arco/node_modules/@types/react/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/collapse/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/core/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/react/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/classnames/index.d.ts","H:/projects/formilyjs-arco/packages/components/src/array-base/index.tsx","H:/projects/formilyjs-arco/packages/components/src/__builtins__/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/array-collapse/index.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Fragment, useState, useEffect } from 'react'\\nimport { Card, Collapse, Empty } from '@arco-design/web-react'\\nimport {\\n  CollapseProps,\\n  CollapseItemProps,\\n} from '@arco-design/web-react/es/collapse'\\nimport { ArrayField } from '@formily/core'\\nimport {\\n  RecursionField,\\n  useField,\\n  useFieldSchema,\\n  observer,\\n  ISchema,\\n} from '@formily/react'\\nimport cls from 'classnames'\\nimport ArrayBase, { ArrayBaseMixins, IArrayBaseProps } from '../array-base'\\nimport { usePrefixCls } from '../__builtins__'\\nimport './index.scss'\\n\\nexport interface IArrayCollapseProps extends CollapseProps {\\n  defaultOpenPanelCount?: number\\n  prefixCls?: string\\n  arrayBaseProps?: IArrayBaseProps\\n}\\ntype ComposedArrayCollapse = React.FC<IArrayCollapseProps> &\\n  ArrayBaseMixins & {\\n    CollapsePanel?: React.FC<CollapseItemProps>\\n  }\\n\\nconst isAdditionComponent = (schema: ISchema) => {\\n  return schema['x-component']?.indexOf('Addition') > -1\\n}\\n\\nconst isIndexComponent = (schema: ISchema) => {\\n  return schema['x-component']?.indexOf('Index') > -1\\n}\\n\\nconst isRemoveComponent = (schema: ISchema) => {\\n  return schema['x-component']?.indexOf('Remove') > -1\\n}\\n\\nconst isMoveUpComponent = (schema: ISchema) => {\\n  return schema['x-component']?.indexOf('MoveUp') > -1\\n}\\n\\nconst isMoveDownComponent = (schema: ISchema) => {\\n  return schema['x-component']?.indexOf('MoveDown') > -1\\n}\\n\\nconst isOperationComponent = (schema: ISchema) => {\\n  return (\\n    isAdditionComponent(schema) ||\\n    isRemoveComponent(schema) ||\\n    isMoveDownComponent(schema) ||\\n    isMoveUpComponent(schema)\\n  )\\n}\\n\\nconst range = (count: number) => Array.from({ length: count }).map((_, i) => i)\\n\\nconst takeDefaultActiveKeys = (\\n  dataSourceLength: number,\\n  defaultOpenPanelCount = Infinity\\n) => {\\n  if (dataSourceLength < defaultOpenPanelCount) return range(dataSourceLength)\\n  return range(defaultOpenPanelCount)\\n}\\n\\nconst insertActiveKeys = (activeKeys: number[], index: number) => {\\n  if (activeKeys.length <= index) return activeKeys.concat(index)\\n  return activeKeys.reduce((buf: number[], key) => {\\n    if (key < index) return buf.concat(key)\\n    if (key === index) return buf.concat([key, key + 1])\\n    return buf.concat(key + 1)\\n  }, [])\\n}\\n\\nexport const ArrayCollapse: ComposedArrayCollapse = observer(\\n  (props: IArrayCollapseProps) => {\\n    const { arrayBaseProps, ...respProps } = props\\n    const field = useField<ArrayField>()\\n    const dataSource = Array.isArray(field.value) ? field.value : []\\n    const [activeKeys, setActiveKeys] = useState<number[]>(\\n      takeDefaultActiveKeys(dataSource.length, respProps.defaultOpenPanelCount)\\n    )\\n    const schema = useFieldSchema()\\n    const prefixCls = usePrefixCls('array-collapse', respProps)\\n    useEffect(() => {\\n      if (!field.modified && dataSource.length) {\\n        setActiveKeys(\\n          takeDefaultActiveKeys(\\n            dataSource.length,\\n            respProps.defaultOpenPanelCount\\n          )\\n        )\\n      }\\n    }, [dataSource.length, field])\\n    if (!schema) throw new Error('can not found schema object')\\n\\n    const renderAddition = () => {\\n      return schema.reduceProperties((addition, schema, key) => {\\n        if (isAdditionComponent(schema)) {\\n          return <RecursionField schema={schema} name={key} />\\n        }\\n        return addition\\n      }, null)\\n    }\\n    const renderEmpty = () => {\\n      if (dataSource.length) return\\n      return (\\n        <Card className={cls(`${prefixCls}-item`, respProps.className)}>\\n          <Empty />\\n        </Card>\\n      )\\n    }\\n\\n    const renderItems = () => {\\n      return (\\n        <Collapse\\n          {...respProps}\\n          activeKey={activeKeys.map((z) => `${z}`)}\\n          onChange={(_key, keys: string[]) => setActiveKeys(keys.map(Number))}\\n          className={cls(`${prefixCls}-item`, respProps.className)}\\n        >\\n          {dataSource.map((item, index) => {\\n            const items = Array.isArray(schema.items)\\n              ? schema.items[index] || schema.items[0]\\n              : schema.items\\n\\n            const panelProps = field\\n              .query(`${field.address}.${index}`)\\n              .get('componentProps')\\n            const props: CollapseItemProps = items?.['x-component-props']\\n            const extra = (\\n              <ArrayBase.Item index={index} record={item}>\\n                <RecursionField\\n                  schema={items as any}\\n                  name={index}\\n                  filterProperties={(schema) => {\\n                    if (!isOperationComponent(schema)) return false\\n                    return true\\n                  }}\\n                  onlyRenderProperties\\n                />\\n                {props?.extra}\\n              </ArrayBase.Item>\\n            )\\n\\n            const content = (\\n              <RecursionField\\n                schema={items as any}\\n                name={index}\\n                filterProperties={(schema) => {\\n                  if (isIndexComponent(schema)) return false\\n                  if (isOperationComponent(schema)) return false\\n                  return true\\n                }}\\n              />\\n            )\\n            return (\\n              <Collapse.Item\\n                {...props}\\n                {...panelProps}\\n                key={index}\\n                name={index + ''}\\n                //  header={header()}\\n                // header 仅为 string 时，extra 才可用\\n                extra={extra}\\n              >\\n                <ArrayBase.Item index={index} key={index} record={item}>\\n                  {content}\\n                </ArrayBase.Item>\\n              </Collapse.Item>\\n            )\\n          })}\\n        </Collapse>\\n      )\\n    }\\n    return (\\n      <ArrayBase\\n        {...arrayBaseProps}\\n        onAdd={(index) => {\\n          setActiveKeys(insertActiveKeys(activeKeys, index))\\n          arrayBaseProps?.onAdd?.(index)\\n        }}\\n      >\\n        {renderEmpty()}\\n        {renderItems()}\\n        {renderAddition()}\\n      </ArrayBase>\\n    )\\n  }\\n)\\n\\nconst CollapsePanel: React.FC<CollapseItemProps> = ({ children }) => {\\n  return <Fragment>{children}</Fragment>\\n}\\n\\nCollapsePanel.displayName = 'CollapsePanel'\\n\\nArrayCollapse.defaultProps = {\\n  defaultOpenPanelCount: 5,\\n}\\nArrayCollapse.displayName = 'ArrayCollapse'\\nArrayCollapse.CollapsePanel = CollapsePanel\\n\\nArrayBase.mixin(ArrayCollapse)\\n\\nexport default ArrayCollapse\\n\"]}"}
