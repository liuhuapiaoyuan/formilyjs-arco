{"code":"import { __assign, __read, __rest } from \"tslib\";\r\nimport React, { Fragment, createContext, useContext, useMemo } from 'react';\r\nimport { connect, useField, observer, useFieldSchema, RecursionField, useForm, } from '@formily/react';\r\nimport { Steps, Button, Space } from '@arco-design/web-react';\r\nimport { FormPath } from '@formily/shared';\r\nimport cls from 'classnames';\r\nimport { usePrefixCls } from '../__builtins__';\r\nimport { FormStep } from '../form-step';\r\nvar FormStepProContext = createContext(null);\r\nvar useFormStepPro = function () { return useContext(FormStepProContext); };\r\nvar parseSchema = function (schema) {\r\n    var schemaStep = { steps: [] };\r\n    schema.mapProperties(function (propertySchema, name) {\r\n        var _a, _b;\r\n        if (((_a = propertySchema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('StepPane')) > -1) {\r\n            schemaStep.steps.push({\r\n                name: name,\r\n                props: propertySchema['x-component-props'],\r\n                schema: propertySchema,\r\n            });\r\n        }\r\n        if (((_b = propertySchema['x-component']) === null || _b === void 0 ? void 0 : _b.indexOf('Previous')) > -1) {\r\n            schemaStep.previous = {\r\n                name: name,\r\n                props: propertySchema['x-component-props'],\r\n                schema: propertySchema,\r\n            };\r\n        }\r\n        if (/NextWithSubmit$/.test(propertySchema['x-component'])) {\r\n            schemaStep.nextWithSubmit = {\r\n                name: name,\r\n                props: propertySchema['x-component-props'],\r\n                schema: propertySchema,\r\n            };\r\n        }\r\n        if (/Next$/.test(propertySchema['x-component'])) {\r\n            schemaStep.next = {\r\n                name: name,\r\n                props: propertySchema['x-component-props'],\r\n                schema: propertySchema,\r\n            };\r\n        }\r\n        if (/\\.Submit$/.test(propertySchema['x-component'])) {\r\n            schemaStep.submit = {\r\n                name: name,\r\n                props: propertySchema['x-component-props'],\r\n                schema: propertySchema,\r\n            };\r\n        }\r\n    });\r\n    return schemaStep;\r\n};\r\nvar Previous = function (props) {\r\n    var _a;\r\n    var text = props.text, restProps = __rest(props, [\"text\"]);\r\n    var formStepCtx = useFormStepPro();\r\n    return (React.createElement(Button, __assign({}, restProps, { disabled: (formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.field.disabled) || !((_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.allowBack), onClick: function () {\r\n            var _a;\r\n            (_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.back();\r\n        } }), text));\r\n};\r\nvar Next = function (props) {\r\n    var _a;\r\n    var text = props.text, restProps = __rest(props, [\"text\"]);\r\n    var formStepCtx = useFormStepPro();\r\n    return (React.createElement(Button, __assign({}, restProps, { disabled: (formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.field.disabled) || !((_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.allowNext), onClick: function () {\r\n            var _a;\r\n            (_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.next();\r\n        } }), text));\r\n};\r\nvar NextWithSubmit = function (props) {\r\n    var _a, _b;\r\n    var text = props.text, onSubmit = props.onSubmit, restProps = __rest(props, [\"text\", \"onSubmit\"]);\r\n    var formStepCtx = useFormStepPro();\r\n    var _c = ((_b = (_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props) === null || _a === void 0 ? void 0 : _a.formStep) !== null && _b !== void 0 ? _b : {}).current, current = _c === void 0 ? 0 : _c;\r\n    var form = useForm();\r\n    var picks = Object.entries(form.getFormGraph())\r\n        .filter(function (_a) {\r\n        var _b = __read(_a, 2), value = _b[1];\r\n        return value.display === 'visible' && value.displayName === 'Field';\r\n    })\r\n        .map(function (_a) {\r\n        var _b = __read(_a, 2), value = _b[1];\r\n        return value.path;\r\n    });\r\n    return (React.createElement(Button, __assign({}, restProps, { onClick: function () {\r\n            var _a, _b;\r\n            (_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.submit(function (values) {\r\n                var _a, _b;\r\n                var target = {};\r\n                picks.forEach(function (pickPath) {\r\n                    var parser = FormPath.parse(pickPath);\r\n                    parser.setIn(target, parser.getIn(values));\r\n                });\r\n                if (onSubmit) {\r\n                    onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(target, current);\r\n                }\r\n                else {\r\n                    (_b = (_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props) === null || _a === void 0 ? void 0 : _a.onSubmit) === null || _b === void 0 ? void 0 : _b.call(_a, target);\r\n                }\r\n            });\r\n            (_b = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _b === void 0 ? void 0 : _b.next();\r\n        } }), text));\r\n};\r\nvar Submit = function (props) {\r\n    var _a;\r\n    var text = props.text, restProps = __rest(props, [\"text\"]);\r\n    var formStepCtx = useFormStepPro();\r\n    return (React.createElement(Button, __assign({}, restProps, { disabled: (formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.field.disabled) || ((_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.allowNext), onClick: function () {\r\n            var _a, _b;\r\n            (_a = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props.formStep) === null || _a === void 0 ? void 0 : _a.submit((_b = formStepCtx === null || formStepCtx === void 0 ? void 0 : formStepCtx.props) === null || _b === void 0 ? void 0 : _b.onSubmit);\r\n        } }), text));\r\n};\r\nexport var FormStepPro = connect(observer(function (_a) {\r\n    var _b;\r\n    var propsFormStep = _a.formStep, className = _a.className, onSubmit = _a.onSubmit, props = __rest(_a, [\"formStep\", \"className\", \"onSubmit\"]);\r\n    var field = useField();\r\n    var formStep = useMemo(function () { var _a; return propsFormStep || ((_a = FormStep.createFormStep) === null || _a === void 0 ? void 0 : _a.call(FormStep)); }, [propsFormStep]);\r\n    var prefixCls = usePrefixCls(props.direction, {\r\n        prefixCls: 'formily-step-pro',\r\n    });\r\n    var schema = useFieldSchema();\r\n    var _c = parseSchema(schema), steps = _c.steps, previous = _c.previous, next = _c.next, nextWithSubmit = _c.nextWithSubmit, submit = _c.submit;\r\n    var current = props.current || (formStep === null || formStep === void 0 ? void 0 : formStep.current) || 0;\r\n    (_b = formStep === null || formStep === void 0 ? void 0 : formStep.connect) === null || _b === void 0 ? void 0 : _b.call(formStep, steps, field);\r\n    return (React.createElement(FormStepProContext.Provider, { value: { props: { formStep: formStep, onSubmit: onSubmit }, field: field, schema: schema } },\r\n        React.createElement(\"div\", { className: cls(prefixCls, className) },\r\n            React.createElement(Steps, __assign({}, props, { style: __assign({ marginBottom: 10 }, props.style), current: current }), steps.map(function (_a, key) {\r\n                var stepProps = _a.props;\r\n                return (React.createElement(Steps.Step, __assign({}, stepProps, { key: key })));\r\n            })),\r\n            steps.map(function (_a, key) {\r\n                var name = _a.name, stepSchema = _a.schema;\r\n                if (key !== current) {\r\n                    return;\r\n                }\r\n                return (React.createElement(RecursionField, { key: key, name: name, schema: stepSchema }));\r\n            }),\r\n            React.createElement(Space, null,\r\n                previous ? (React.createElement(RecursionField, { schema: previous.schema, name: previous.name, key: previous.name })) : null,\r\n                next ? (React.createElement(RecursionField, { schema: next.schema, name: next.name, key: next.name })) : null,\r\n                nextWithSubmit ? (React.createElement(RecursionField, { schema: nextWithSubmit.schema, name: nextWithSubmit.name, key: nextWithSubmit.name })) : null,\r\n                submit ? (React.createElement(RecursionField, { schema: submit.schema, name: submit.name, key: submit.name })) : null))));\r\n}));\r\nvar StepPane = function (_a) {\r\n    var children = _a.children;\r\n    return (React.createElement(Fragment, null, children));\r\n};\r\nFormStepPro.StepPane = StepPane;\r\nFormStepPro.Previous = Previous;\r\nFormStepPro.Next = Next;\r\nFormStepPro.NextWithSubmit = NextWithSubmit;\r\nFormStepPro.Submit = Submit;\r\nexport default FormStepPro;\r\n//# sourceMappingURL=index.js.map","references":["H:/projects/formilyjs-arco/node_modules/@types/react/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/react/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/core/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/json-schema/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/shared/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/button/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/steps/interface.d.ts","H:/projects/formilyjs-arco/node_modules/classnames/index.d.ts","H:/projects/formilyjs-arco/packages/components/src/__builtins__/index.ts","H:/projects/formilyjs-arco/packages/components/src/form-step/index.tsx"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/form-step-pro/index.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Fragment, createContext, useContext, useMemo } from 'react'\\nimport {\\n  connect,\\n  useField,\\n  observer,\\n  useFieldSchema,\\n  RecursionField,\\n  useForm,\\n} from '@formily/react'\\nimport { VoidField } from '@formily/core'\\nimport { Steps, Button, Space } from '@arco-design/web-react'\\nimport { Schema, SchemaKey } from '@formily/json-schema'\\nimport { FormPath } from '@formily/shared'\\nimport type { ButtonProps } from '@arco-design/web-react/es/button'\\nimport type {\\n  StepsProps,\\n  StepProps,\\n} from '@arco-design/web-react/es/steps/interface'\\nimport cls from 'classnames'\\nimport { usePrefixCls } from '../__builtins__'\\nimport { FormStep, IFormStep } from '../form-step'\\n\\nexport interface IFormStepProProps extends StepsProps {\\n  formStep?: IFormStep\\n  onSubmit?: (value?: any) => void\\n}\\n\\nexport interface IFormStepProContext {\\n  props: Pick<IFormStepProProps, 'formStep' | 'onSubmit'>\\n  field: VoidField\\n  schema: Schema\\n}\\n\\ntype ComposedFormStepPro = React.FC<IFormStepProProps> & {\\n  StepPane?: React.FC<StepProps>\\n  Next?: React.FC<ButtonProps & { text?: string }>\\n  NextWithSubmit?: React.FC<ButtonProps & { text?: string }>\\n  Previous?: React.FC<ButtonProps & { text?: string }>\\n  Submit?: React.FC<ButtonProps & { text?: string }>\\n}\\n\\ntype SchemaStepProperty = {\\n  name: SchemaKey\\n  props: any\\n  schema: Schema\\n}\\n\\nconst FormStepProContext = createContext<IFormStepProContext | null>(null)\\n\\nconst useFormStepPro = () => useContext(FormStepProContext)\\n\\nconst parseSchema = (schema: Schema) => {\\n  const schemaStep: {\\n    steps: SchemaStepProperty[]\\n    previous?: SchemaStepProperty\\n    next?: SchemaStepProperty\\n    nextWithSubmit?: SchemaStepProperty\\n    submit?: SchemaStepProperty\\n  } = { steps: [] }\\n\\n  schema.mapProperties((propertySchema, name) => {\\n    if (propertySchema['x-component']?.indexOf('StepPane') > -1) {\\n      schemaStep.steps.push({\\n        name,\\n        props: propertySchema['x-component-props'],\\n        schema: propertySchema,\\n      })\\n    }\\n\\n    if (propertySchema['x-component']?.indexOf('Previous') > -1) {\\n      schemaStep.previous = {\\n        name,\\n        props: propertySchema['x-component-props'],\\n        schema: propertySchema,\\n      }\\n    }\\n\\n    if (/NextWithSubmit$/.test(propertySchema['x-component'])) {\\n      schemaStep.nextWithSubmit = {\\n        name,\\n        props: propertySchema['x-component-props'],\\n        schema: propertySchema,\\n      }\\n    }\\n\\n    if (/Next$/.test(propertySchema['x-component'])) {\\n      schemaStep.next = {\\n        name,\\n        props: propertySchema['x-component-props'],\\n        schema: propertySchema,\\n      }\\n    }\\n\\n    if (/\\\\.Submit$/.test(propertySchema['x-component'])) {\\n      schemaStep.submit = {\\n        name,\\n        props: propertySchema['x-component-props'],\\n        schema: propertySchema,\\n      }\\n    }\\n  })\\n\\n  return schemaStep\\n}\\n\\nconst Previous: React.FC<ButtonProps & { text?: string }> = (props) => {\\n  const { text, ...restProps } = props\\n\\n  const formStepCtx = useFormStepPro()\\n\\n  return (\\n    <Button\\n      {...restProps}\\n      disabled={\\n        formStepCtx?.field.disabled || !formStepCtx?.props.formStep?.allowBack\\n      }\\n      onClick={() => {\\n        formStepCtx?.props.formStep?.back()\\n      }}\\n    >\\n      {text}\\n    </Button>\\n  )\\n}\\n\\nconst Next: React.FC<ButtonProps & { text?: string }> = (props) => {\\n  const { text, ...restProps } = props\\n\\n  const formStepCtx = useFormStepPro()\\n\\n  return (\\n    <Button\\n      {...restProps}\\n      disabled={\\n        formStepCtx?.field.disabled || !formStepCtx?.props.formStep?.allowNext\\n      }\\n      onClick={() => {\\n        formStepCtx?.props.formStep?.next()\\n      }}\\n    >\\n      {text}\\n    </Button>\\n  )\\n}\\n\\nconst NextWithSubmit: React.FC<\\n  ButtonProps & { text?: string; onSubmit?(...params: any): any }\\n> = (props) => {\\n  const { text, onSubmit, ...restProps } = props\\n  const formStepCtx = useFormStepPro()\\n  const { current = 0 } = formStepCtx?.props?.formStep ?? {}\\n  const form = useForm()\\n  const picks = Object.entries(form.getFormGraph())\\n    .filter(([, value]: any) => {\\n      return value.display === 'visible' && value.displayName === 'Field'\\n    })\\n    .map(([, value]: any) => {\\n      return value.path\\n    })\\n  return (\\n    <Button\\n      {...restProps}\\n      onClick={() => {\\n        formStepCtx?.props.formStep?.submit((values) => {\\n          const target = {}\\n          picks.forEach((pickPath) => {\\n            const parser = FormPath.parse(pickPath)\\n            parser.setIn(target, parser.getIn(values))\\n          })\\n          if (onSubmit) {\\n            onSubmit?.(target, current)\\n          } else {\\n            formStepCtx?.props?.onSubmit?.(target)\\n          }\\n        })\\n        formStepCtx?.props.formStep?.next()\\n      }}\\n    >\\n      {text}\\n    </Button>\\n  )\\n}\\n\\nconst Submit: React.FC<ButtonProps & { text?: string }> = (props) => {\\n  const { text, ...restProps } = props\\n\\n  const formStepCtx = useFormStepPro()\\n\\n  return (\\n    <Button\\n      {...restProps}\\n      disabled={\\n        formStepCtx?.field.disabled || formStepCtx?.props.formStep?.allowNext\\n      }\\n      onClick={() => {\\n        formStepCtx?.props.formStep?.submit(formStepCtx?.props?.onSubmit)\\n      }}\\n    >\\n      {text}\\n    </Button>\\n  )\\n}\\n\\nexport const FormStepPro: ComposedFormStepPro = connect(\\n  observer(\\n    ({\\n      formStep: propsFormStep,\\n      className,\\n      onSubmit,\\n      ...props\\n    }: IFormStepProProps) => {\\n      const field = useField<VoidField>()\\n      const formStep = useMemo(\\n        () => propsFormStep || FormStep.createFormStep?.(),\\n        [propsFormStep]\\n      )\\n      const prefixCls = usePrefixCls(props.direction, {\\n        prefixCls: 'formily-step-pro',\\n      })\\n      const schema = useFieldSchema()\\n      const { steps, previous, next, nextWithSubmit, submit } =\\n        parseSchema(schema)\\n      const current = props.current || formStep?.current || 0\\n\\n      formStep?.connect?.(steps, field)\\n\\n      return (\\n        <FormStepProContext.Provider\\n          value={{ props: { formStep, onSubmit }, field, schema }}\\n        >\\n          <div className={cls(prefixCls, className)}>\\n            <Steps\\n              {...props}\\n              style={{ marginBottom: 10, ...props.style }}\\n              current={current}\\n            >\\n              {steps.map(({ props: stepProps }, key) => (\\n                <Steps.Step {...stepProps} key={key} />\\n              ))}\\n            </Steps>\\n            {steps.map(({ name, schema: stepSchema }, key) => {\\n              if (key !== current) {\\n                return\\n              }\\n\\n              return (\\n                <RecursionField key={key} name={name} schema={stepSchema} />\\n              )\\n            })}\\n            <Space>\\n              {previous ? (\\n                <RecursionField\\n                  schema={previous.schema}\\n                  name={previous.name}\\n                  key={previous.name}\\n                />\\n              ) : null}\\n              {next ? (\\n                <RecursionField\\n                  schema={next.schema}\\n                  name={next.name}\\n                  key={next.name}\\n                />\\n              ) : null}\\n              {nextWithSubmit ? (\\n                <RecursionField\\n                  schema={nextWithSubmit.schema}\\n                  name={nextWithSubmit.name}\\n                  key={nextWithSubmit.name}\\n                />\\n              ) : null}\\n              {submit ? (\\n                <RecursionField\\n                  schema={submit.schema}\\n                  name={submit.name}\\n                  key={submit.name}\\n                />\\n              ) : null}\\n            </Space>\\n          </div>\\n        </FormStepProContext.Provider>\\n      )\\n    }\\n  )\\n)\\n\\nconst StepPane: React.FC<StepProps> = ({ children }) => (\\n  <Fragment>{children}</Fragment>\\n)\\n\\nFormStepPro.StepPane = StepPane\\nFormStepPro.Previous = Previous\\nFormStepPro.Next = Next\\nFormStepPro.NextWithSubmit = NextWithSubmit\\nFormStepPro.Submit = Submit\\n\\nexport default FormStepPro\\n\"]}"}
