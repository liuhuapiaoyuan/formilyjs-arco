{"code":"import { __assign } from \"tslib\";\r\nimport React from \"react\";\r\nimport { connect, mapReadPretty, mapProps } from \"@formily/react\";\r\nimport { TreeSelect as ArcoTreeSelect } from \"@arco-design/web-react\";\r\nimport { PreviewText } from \"../preview-text\";\r\nimport { IconLoading } from \"@arco-design/web-react/icon\";\r\nfunction convertTreeData(list) {\r\n    return list.map(function (z) {\r\n        var _a;\r\n        var result = __assign(__assign({}, z), { title: (_a = z.title) !== null && _a !== void 0 ? _a : z.label });\r\n        if (Array.isArray(z.children)) {\r\n            result.children = convertTreeData(z.children);\r\n        }\r\n        return result;\r\n    });\r\n}\r\n//treeData  label\r\nexport var TreeSelect = connect(ArcoTreeSelect, mapProps(function (props, field) {\r\n    var _a = field.dataSource, dataSource = _a === void 0 ? [] : _a;\r\n    return __assign(__assign({}, props), { treeData: convertTreeData(dataSource), suffixIcon: (field === null || field === void 0 ? void 0 : field[\"loading\"]) || (field === null || field === void 0 ? void 0 : field[\"validating\"]) ? (React.createElement(IconLoading, null)) : (props === null || props === void 0 ? void 0 : props[\"arrowIcon\"]) });\r\n}), mapReadPretty(PreviewText.TreeSelect));\r\nexport default TreeSelect;\r\n//# sourceMappingURL=index.js.map","references":["H:/projects/formilyjs-arco/node_modules/@types/react/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/react/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/index.d.ts","H:/projects/formilyjs-arco/packages/components/src/preview-text/index.tsx","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/icon/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/tree-select/index.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAClE,OAAO,EAAE,UAAU,IAAI,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACtE,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,SAAS,eAAe,CAAC,IAAU;IAEjC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC;;QACf,IAAI,MAAM,yBACL,CAAC,KACJ,KAAK,EAAC,MAAA,CAAC,CAAC,KAAK,mCAAE,CAAC,CAAC,KAAK,GACvB,CAAA;QACD,IAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAC;YAC3B,MAAM,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;SAC9C;QACD,OAAO,MAAM,CAAA;IACf,CAAC,CAAC,CAAA;AACJ,CAAC;AACD,iBAAiB;AACjB,MAAM,CAAC,IAAM,UAAU,GAAG,OAAO,CAC/B,cAAc,EACd,QAAQ,CACN,UAAC,KAAK,EAAE,KAAK;IACJ,IAAA,KAAmB,KAAY,WAAhB,EAAf,UAAU,mBAAG,EAAE,KAAA,CAAgB;IACtC,6BACK,KAAK,KACR,QAAQ,EAAC,eAAe,CAAC,UAAU,CAAC,EACpC,UAAU,EACR,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,SAAS,CAAC,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,YAAY,CAAC,CAAA,CAAC,CAAC,CAAC,CAC5C,oBAAC,WAAW,OAAG,CAChB,CAAC,CAAC,CAAC,CACF,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,WAAW,CAAC,CACrB,IACJ;AACH,CAAC,CACF,EACD,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,CACtC,CAAC;AAEF,eAAe,UAAU,CAAC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport { connect, mapReadPretty, mapProps } from \\\"@formily/react\\\";\\nimport { TreeSelect as ArcoTreeSelect } from \\\"@arco-design/web-react\\\";\\nimport { PreviewText } from \\\"../preview-text\\\";\\nimport { IconLoading } from \\\"@arco-design/web-react/icon\\\";\\nfunction convertTreeData(list:any[]){\\n\\n  return list.map(z=>{\\n    let result = {\\n      ...z,\\n      title:z.title??z.label ,\\n    }\\n    if(Array.isArray(z.children)){\\n      result.children = convertTreeData(z.children)\\n    }\\n    return result\\n  })\\n}\\n//treeData  label\\nexport const TreeSelect = connect(\\n  ArcoTreeSelect,\\n  mapProps(\\n    (props, field) => {\\n      const {dataSource = []} = field as any\\n      return {\\n        ...props,\\n        treeData:convertTreeData(dataSource)  , \\n        suffixIcon:\\n          field?.[\\\"loading\\\"] || field?.[\\\"validating\\\"] ? (\\n            <IconLoading />\\n          ) : (\\n            props?.[\\\"arrowIcon\\\"]\\n          ),\\n      }\\n    }\\n  ),\\n  mapReadPretty(PreviewText.TreeSelect)\\n);\\n\\nexport default TreeSelect;\\n\"]}"}
