{"code":"import { __assign, __awaiter, __generator, __rest } from \"tslib\";\r\nimport React, { Fragment } from 'react';\r\nimport { action, model, markRaw } from '@formily/reactive';\r\nimport { Steps } from '@arco-design/web-react';\r\nimport cls from 'classnames';\r\nimport { connect, useField, observer, useFieldSchema, RecursionField, } from '@formily/react';\r\nimport { usePrefixCls } from '../__builtins__';\r\nvar parseSteps = function (schema) {\r\n    var steps = [];\r\n    schema.mapProperties(function (propertySchema, name) {\r\n        var _a;\r\n        if (((_a = propertySchema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('StepPane')) > -1) {\r\n            steps.push({\r\n                name: name,\r\n                props: propertySchema['x-component-props'],\r\n                schema: propertySchema,\r\n            });\r\n        }\r\n    });\r\n    return steps;\r\n};\r\nvar createFormStep = function (defaultCurrent) {\r\n    var _a, _b, _c;\r\n    if (defaultCurrent === void 0) { defaultCurrent = 0; }\r\n    var env = {\r\n        form: null,\r\n        field: null,\r\n        steps: [],\r\n    };\r\n    var setDisplay = (_a = action.bound) === null || _a === void 0 ? void 0 : _a.call(action, function (target) {\r\n        var currentStep = env.steps[target];\r\n        env.steps.forEach(function (_a) {\r\n            var _b, _c;\r\n            var name = _a.name;\r\n            (_b = env.form) === null || _b === void 0 ? void 0 : _b.query(\"\".concat((_c = env.field) === null || _c === void 0 ? void 0 : _c.address, \".\").concat(name)).take(function (field) {\r\n                if (name === currentStep.name) {\r\n                    field.setDisplay('visible');\r\n                }\r\n                else {\r\n                    field.setDisplay('hidden');\r\n                }\r\n            });\r\n        });\r\n    });\r\n    var next = (_b = action.bound) === null || _b === void 0 ? void 0 : _b.call(action, function () {\r\n        if (formStep.allowNext) {\r\n            setDisplay === null || setDisplay === void 0 ? void 0 : setDisplay(formStep.current + 1);\r\n            formStep.setCurrent(formStep.current + 1);\r\n        }\r\n    });\r\n    var back = (_c = action.bound) === null || _c === void 0 ? void 0 : _c.call(action, function () {\r\n        if (formStep.allowBack) {\r\n            setDisplay === null || setDisplay === void 0 ? void 0 : setDisplay(formStep.current - 1);\r\n            formStep.setCurrent(formStep.current - 1);\r\n        }\r\n    });\r\n    var formStep = model({\r\n        connect: function (steps, field) {\r\n            env.steps = steps;\r\n            env.form = field === null || field === void 0 ? void 0 : field.form;\r\n            env.field = field;\r\n        },\r\n        current: defaultCurrent,\r\n        setCurrent: function (key) {\r\n            formStep.current = key;\r\n        },\r\n        get allowNext() {\r\n            return formStep.current < env.steps.length - 1;\r\n        },\r\n        get allowBack() {\r\n            return formStep.current > 0;\r\n        },\r\n        get steps() {\r\n            return env.steps;\r\n        },\r\n        next: function () {\r\n            var _a;\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _b;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            _c.trys.push([0, 2, , 3]);\r\n                            return [4 /*yield*/, ((_a = env.form) === null || _a === void 0 ? void 0 : _a.validate())];\r\n                        case 1:\r\n                            _c.sent();\r\n                            next === null || next === void 0 ? void 0 : next();\r\n                            return [3 /*break*/, 3];\r\n                        case 2:\r\n                            _b = _c.sent();\r\n                            return [3 /*break*/, 3];\r\n                        case 3: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        back: function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    back === null || back === void 0 ? void 0 : back();\r\n                    return [2 /*return*/];\r\n                });\r\n            });\r\n        },\r\n        submit: function (onSubmit) {\r\n            var _a, _b;\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_c) {\r\n                    return [2 /*return*/, (_b = (_a = env.form) === null || _a === void 0 ? void 0 : _a.submit) === null || _b === void 0 ? void 0 : _b.call(_a, onSubmit)];\r\n                });\r\n            });\r\n        },\r\n    });\r\n    return markRaw(formStep);\r\n};\r\nexport var FormStep = connect(observer(function (_a) {\r\n    var _b;\r\n    var formStep = _a.formStep, className = _a.className, props = __rest(_a, [\"formStep\", \"className\"]);\r\n    var field = useField();\r\n    var prefixCls = usePrefixCls('formily-step', props);\r\n    var schema = useFieldSchema();\r\n    var steps = parseSteps(schema);\r\n    var current = props.current || (formStep === null || formStep === void 0 ? void 0 : formStep.current) || 0;\r\n    (_b = formStep === null || formStep === void 0 ? void 0 : formStep.connect) === null || _b === void 0 ? void 0 : _b.call(formStep, steps, field);\r\n    return (React.createElement(\"div\", { className: cls(prefixCls, className) },\r\n        React.createElement(Steps, __assign({}, props, { style: __assign({ marginBottom: 10 }, props.style), current: current }), steps.map(function (_a, key) {\r\n            var stepProps = _a.props;\r\n            return (React.createElement(Steps.Step, __assign({}, stepProps, { key: key })));\r\n        })),\r\n        steps.map(function (_a, key) {\r\n            var name = _a.name, stepSchema = _a.schema;\r\n            if (key !== current) {\r\n                return;\r\n            }\r\n            return React.createElement(RecursionField, { key: key, name: name, schema: stepSchema });\r\n        })));\r\n}));\r\nvar StepPane = function (_a) {\r\n    var children = _a.children;\r\n    return (React.createElement(Fragment, null, children));\r\n};\r\nFormStep.StepPane = StepPane;\r\nFormStep.createFormStep = createFormStep;\r\nexport default FormStep;\r\n//# sourceMappingURL=index.js.map","references":["H:/projects/formilyjs-arco/node_modules/@types/react/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/reactive/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/index.d.ts","H:/projects/formilyjs-arco/node_modules/classnames/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/steps/interface.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/core/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/react/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/json-schema/esm/index.d.ts","H:/projects/formilyjs-arco/packages/components/src/__builtins__/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/form-step/index.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Fragment } from 'react'\\nimport { action, model, markRaw } from '@formily/reactive'\\nimport { Steps } from '@arco-design/web-react'\\nimport cls from 'classnames'\\nimport type {\\n  StepsProps,\\n  StepProps,\\n} from '@arco-design/web-react/es/steps/interface'\\nimport { Form, VoidField } from '@formily/core'\\nimport {\\n  connect,\\n  useField,\\n  observer,\\n  useFieldSchema,\\n  RecursionField,\\n} from '@formily/react'\\nimport { Schema, SchemaKey } from '@formily/json-schema'\\nimport { usePrefixCls } from '../__builtins__'\\n\\nexport interface IFormStep {\\n  connect: (steps: SchemaStep[], field: VoidField) => void\\n  current: number\\n  allowNext: boolean\\n  allowBack: boolean\\n  steps: any[]\\n  submit: Form['submit']\\n  setCurrent(key: number): void\\n  next(): void\\n  back(): void\\n}\\n\\nexport interface IFormStepProps extends StepProps {\\n  formStep?: IFormStep\\n}\\n\\ntype ComposedFormTab = React.FC<IFormStepProps> & {\\n  StepPane?: React.FC<StepsProps>\\n  createFormStep?: (defaultCurrent?: number) => IFormStep\\n}\\n\\ntype SchemaStep = {\\n  name: SchemaKey\\n  props: any\\n  schema: Schema\\n}\\n\\ntype FormStepEnv = {\\n  form: Form | null\\n  field: VoidField | null\\n  steps: SchemaStep[]\\n}\\n\\nconst parseSteps = (schema: Schema) => {\\n  const steps: SchemaStep[] = []\\n  schema.mapProperties((propertySchema, name) => {\\n    if (propertySchema['x-component']?.indexOf('StepPane') > -1) {\\n      steps.push({\\n        name,\\n        props: propertySchema['x-component-props'],\\n        schema: propertySchema,\\n      })\\n    }\\n  })\\n  return steps\\n}\\n\\nconst createFormStep = (defaultCurrent = 0): IFormStep => {\\n  const env: FormStepEnv = {\\n    form: null,\\n    field: null,\\n    steps: [],\\n  }\\n\\n  const setDisplay = action.bound?.((target: number) => {\\n    const currentStep = env.steps[target]\\n    env.steps.forEach(({ name }) => {\\n      env.form?.query(`${env.field?.address}.${name}`).take((field) => {\\n        if (name === currentStep.name) {\\n          field.setDisplay('visible')\\n        } else {\\n          field.setDisplay('hidden')\\n        }\\n      })\\n    })\\n  })\\n\\n  const next = action.bound?.(() => {\\n    if (formStep.allowNext) {\\n      setDisplay?.(formStep.current + 1)\\n      formStep.setCurrent(formStep.current + 1)\\n    }\\n  })\\n\\n  const back = action.bound?.(() => {\\n    if (formStep.allowBack) {\\n      setDisplay?.(formStep.current - 1)\\n      formStep.setCurrent(formStep.current - 1)\\n    }\\n  })\\n\\n  const formStep: IFormStep | any = model({\\n    connect(steps, field) {\\n      env.steps = steps\\n      env.form = field?.form\\n      env.field = field\\n    },\\n    current: defaultCurrent,\\n    setCurrent(key: number) {\\n      formStep.current = key\\n    },\\n    get allowNext() {\\n      return formStep.current < env.steps.length - 1\\n    },\\n    get allowBack() {\\n      return formStep.current > 0\\n    },\\n    get steps() {\\n      return env.steps\\n    },\\n    async next() {\\n      try {\\n        await env.form?.validate()\\n        next?.()\\n      } catch {}\\n    },\\n    async back() {\\n      back?.()\\n    },\\n    async submit(onSubmit) {\\n      return env.form?.submit?.(onSubmit)\\n    },\\n  })\\n  return markRaw(formStep)\\n}\\n\\nexport const FormStep: ComposedFormTab = connect(\\n  observer(({ formStep, className, ...props }: IFormStepProps) => {\\n    const field = useField<VoidField>()\\n    const prefixCls = usePrefixCls('formily-step', props)\\n    const schema = useFieldSchema()\\n    const steps = parseSteps(schema)\\n    const current = props.current || formStep?.current || 0\\n    formStep?.connect?.(steps, field)\\n    return (\\n      <div className={cls(prefixCls, className)}>\\n        <Steps\\n          {...props}\\n          style={{ marginBottom: 10, ...props.style }}\\n          current={current}\\n        >\\n          {steps.map(({ props: stepProps }, key) => (\\n            <Steps.Step {...stepProps} key={key} />\\n          ))}\\n        </Steps>\\n        {steps.map(({ name, schema: stepSchema }, key) => {\\n          if (key !== current) {\\n            return\\n          }\\n          return <RecursionField key={key} name={name} schema={stepSchema} />\\n        })}\\n      </div>\\n    )\\n  })\\n)\\n\\nconst StepPane: React.FC<StepsProps> = ({ children }) => (\\n  <Fragment>{children}</Fragment>\\n)\\n\\nFormStep.StepPane = StepPane\\nFormStep.createFormStep = createFormStep\\n\\nexport default FormStep\\n\"]}"}
