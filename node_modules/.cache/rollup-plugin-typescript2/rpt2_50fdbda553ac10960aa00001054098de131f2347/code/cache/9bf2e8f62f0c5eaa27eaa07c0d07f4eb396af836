{"code":"import { __assign, __rest } from \"tslib\";\r\nimport React, { Fragment, useMemo, useRef } from 'react';\r\nimport { Tabs, Badge } from '@arco-design/web-react';\r\nimport { model } from '@formily/reactive';\r\nimport { useField, observer, useFieldSchema, RecursionField, } from '@formily/react';\r\nimport cls from 'classnames';\r\nimport { usePrefixCls } from '../__builtins__';\r\nvar TabPaneArco = Tabs.TabPane;\r\nvar useTabs = function () {\r\n    var tabsField = useField();\r\n    var schema = useFieldSchema();\r\n    var tabs = [];\r\n    schema.mapProperties(function (schema, name) {\r\n        var _a, _b;\r\n        var field = tabsField.query(tabsField.address.concat(name)).take();\r\n        if ((field === null || field === void 0 ? void 0 : field.display) === 'none' || (field === null || field === void 0 ? void 0 : field.display) === 'hidden')\r\n            return;\r\n        if (((_a = schema['x-component']) === null || _a === void 0 ? void 0 : _a.indexOf('TabPane')) > -1) {\r\n            tabs.push({\r\n                name: name,\r\n                props: __assign({ itemKey: ((_b = schema === null || schema === void 0 ? void 0 : schema['x-component-props']) === null || _b === void 0 ? void 0 : _b.itemKey) || name }, schema === null || schema === void 0 ? void 0 : schema['x-component-props']),\r\n                schema: schema,\r\n            });\r\n        }\r\n    });\r\n    return tabs;\r\n};\r\nvar createFormTab = function (defaultActiveKey, activeKey) {\r\n    var formTab = model({\r\n        defaultActiveKey: defaultActiveKey,\r\n        activeKey: activeKey,\r\n        setActiveKey: function (key) {\r\n            formTab.activeKey = key;\r\n        },\r\n    });\r\n    return formTab;\r\n};\r\nexport var FormTab = observer(function (_a) {\r\n    var _b;\r\n    var formTab = _a.formTab, props = __rest(_a, [\"formTab\"]);\r\n    var field = useField();\r\n    var tabs = useTabs();\r\n    var tabsRef = useRef(tabs);\r\n    var propsRef = useRef(props);\r\n    var _formTab = useMemo(function () {\r\n        var _a, _b, _c, _d;\r\n        return (formTab !== null && formTab !== void 0 ? formTab : createFormTab((_a = propsRef.current.defaultActiveTab) !== null && _a !== void 0 ? _a : (_d = (_c = (_b = tabsRef.current) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.props) === null || _d === void 0 ? void 0 : _d.itemKey, propsRef.current.activeTab));\r\n    }, [formTab]);\r\n    var prefixCls = usePrefixCls('formily-tab');\r\n    var badgedTab = function (key, props) {\r\n        var _a, _b;\r\n        var errors = field.form.queryFeedbacks({\r\n            type: 'error',\r\n            address: \"\".concat(field.address.concat(key), \".*\"),\r\n        });\r\n        if (errors.length) {\r\n            return (React.createElement(Badge, { className: \"errors-badge\", count: errors.length }, (_a = props.tab) !== null && _a !== void 0 ? _a : props.title));\r\n        }\r\n        return (_b = props.tab) !== null && _b !== void 0 ? _b : props.title;\r\n    };\r\n    return (React.createElement(Tabs, __assign({}, props, { type: \"card-gutter\", className: cls(prefixCls, props.className), defaultActiveTab: _formTab === null || _formTab === void 0 ? void 0 : _formTab.defaultActiveKey, activeTab: (_b = _formTab === null || _formTab === void 0 ? void 0 : _formTab.activeKey) !== null && _b !== void 0 ? _b : _formTab === null || _formTab === void 0 ? void 0 : _formTab.defaultActiveKey, onChange: function (key) {\r\n            var _a, _b;\r\n            (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, key);\r\n            (_b = _formTab === null || _formTab === void 0 ? void 0 : _formTab.setActiveKey) === null || _b === void 0 ? void 0 : _b.call(_formTab, key);\r\n        } }), tabs.map(function (_a, key) {\r\n        var props = _a.props, schema = _a.schema, name = _a.name;\r\n        var itemKey = props.itemKey, reset = __rest(props, [\"itemKey\"]);\r\n        return (React.createElement(TabPaneArco, __assign({ key: \"\".concat(itemKey !== null && itemKey !== void 0 ? itemKey : key) }, reset, { title: badgedTab(name, props) }),\r\n            React.createElement(RecursionField, { schema: schema, name: name })));\r\n    })));\r\n});\r\nvar TabPane = function (_a) {\r\n    var children = _a.children;\r\n    return React.createElement(Fragment, null, children);\r\n};\r\nFormTab.TabPane = TabPane;\r\nFormTab.createFormTab = createFormTab;\r\nexport default FormTab;\r\n//# sourceMappingURL=index.js.map","references":["H:/projects/formilyjs-arco/node_modules/@types/react/index.d.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/reactive/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/react/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/@formily/json-schema/esm/index.d.ts","H:/projects/formilyjs-arco/node_modules/classnames/index.d.ts","H:/projects/formilyjs-arco/packages/components/src/__builtins__/index.ts","H:/projects/formilyjs-arco/node_modules/@arco-design/web-react/es/tabs/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/form-tab/index.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Fragment, useMemo, useRef } from 'react'\\nimport { Tabs, Badge } from '@arco-design/web-react'\\nimport { model } from '@formily/reactive'\\nimport {\\n  useField,\\n  observer,\\n  useFieldSchema,\\n  RecursionField,\\n} from '@formily/react'\\nimport { Schema, SchemaKey } from '@formily/json-schema'\\nimport cls from 'classnames'\\nimport { usePrefixCls } from '../__builtins__'\\nimport { TabPaneProps, TabsProps } from '@arco-design/web-react/es/tabs'\\nconst TabPaneArco = Tabs.TabPane\\nexport interface IFormTab {\\n  activeKey?: string\\n  setActiveKey(key: string): void\\n}\\n\\nexport interface IFormTabProps extends TabsProps {\\n  formTab?: IFormTab\\n}\\n\\nexport interface IFormTabPaneProps extends TabPaneProps {\\n  key: string | number\\n}\\n\\ntype ComposedFormTab = React.FC<IFormTabProps> & {\\n  TabPane?: React.FC<IFormTabPaneProps>\\n  createFormTab?: (defaultActiveKey?: string) => IFormTab\\n}\\n\\nconst useTabs = () => {\\n  const tabsField = useField()\\n  const schema = useFieldSchema()\\n  const tabs: { name: SchemaKey; props: any; schema: Schema }[] = []\\n  schema.mapProperties((schema, name) => {\\n    const field = tabsField.query(tabsField.address.concat(name)).take()\\n    if (field?.display === 'none' || field?.display === 'hidden') return\\n    if (schema['x-component']?.indexOf('TabPane') > -1) {\\n      tabs.push({\\n        name,\\n        props: {\\n          itemKey: schema?.['x-component-props']?.itemKey || name,\\n          ...schema?.['x-component-props'],\\n        },\\n        schema,\\n      })\\n    }\\n  })\\n  return tabs\\n}\\n\\nconst createFormTab = (defaultActiveKey?: string, activeKey?: string) => {\\n  const formTab: any = model({\\n    defaultActiveKey,\\n    activeKey,\\n    setActiveKey(key: string) {\\n      formTab.activeKey = key\\n    },\\n  })\\n  return formTab\\n}\\n\\nexport const FormTab: ComposedFormTab = observer(({ formTab, ...props }) => {\\n  const field = useField()\\n  const tabs = useTabs()\\n  const tabsRef = useRef(tabs)\\n  const propsRef = useRef(props)\\n  const _formTab = useMemo(() => {\\n    return (\\n      formTab ??\\n      createFormTab(\\n        propsRef.current.defaultActiveTab ??\\n          tabsRef.current?.[0]?.props?.itemKey,\\n        propsRef.current.activeTab\\n      )\\n    )\\n  }, [formTab])\\n  const prefixCls = usePrefixCls('formily-tab')\\n\\n  const badgedTab = (key: SchemaKey, props: any) => {\\n    const errors = field.form.queryFeedbacks({\\n      type: 'error',\\n      address: `${field.address.concat(key)}.*`,\\n    })\\n    if (errors.length) {\\n      return (\\n        <Badge className=\\\"errors-badge\\\" count={errors.length}>\\n          {props.tab ?? props.title}\\n        </Badge>\\n      )\\n    }\\n    return props.tab ?? props.title\\n  }\\n\\n  return (\\n    <Tabs\\n      {...props}\\n      type=\\\"card-gutter\\\"\\n      className={cls(prefixCls, props.className)}\\n      defaultActiveTab={_formTab?.defaultActiveKey}\\n      activeTab={_formTab?.activeKey ?? _formTab?.defaultActiveKey}\\n      onChange={(key) => {\\n        props.onChange?.(key)\\n        _formTab?.setActiveKey?.(key)\\n      }}\\n    >\\n      {tabs.map(({ props, schema, name }, key) => {\\n        const { itemKey, ...reset } = props\\n        return (\\n          <TabPaneArco\\n            key={`${itemKey ?? key}`}\\n            {...reset}\\n            title={badgedTab(name, props)}\\n          >\\n            <RecursionField schema={schema} name={name} />\\n          </TabPaneArco>\\n        )\\n      })}\\n    </Tabs>\\n  )\\n})\\n\\nconst TabPane: React.FC<IFormTabPaneProps> = ({ children }) => {\\n  return <Fragment>{children}</Fragment>\\n}\\n\\nFormTab.TabPane = TabPane\\nFormTab.createFormTab = createFormTab\\n\\nexport default FormTab\\n\"]}"}
